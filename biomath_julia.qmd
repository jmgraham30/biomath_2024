---
title: "Julia for Biomathematics"
jupyter: julia-1.9
bibliography: biomath_2024.bib
license: "CC BY-NC-SA 4.0"
---

```{julia}
#| include: false 

using DrWatson

@quickactivate "biomath_2024"
```



## Overview

Scientific computing software plays a major role in biomathematics for many reasons some of which include:

* The complexity of biological systems leads to models or equations that are difficult to work with analytically. 

* The need to synthesize theoretical models and data from experiments.

* Graphs and visualizations are important for understanding and communicating results.

* Computing allows us to use theoretical models to conduct experiments [*in silico*](https://en.wikipedia.org/wiki/In_silico) that would be difficult or impossible to conduct otherwise. 

Thus, this course will make use of scientific computing software. Three commonly used languages for scientific computing in biomathematics are [R](https://www.r-project.org/), [Julia](https://julialang.org/), and [Python](https://www.python.org/). This course will emphasize the use of R, but it's worth knowing at least a little about scientific computing in all three languages. The goal is not to become an expert in any of these languages, but rather to become familiar with the basics of each language and to learn how to use them to solve problems in biomathematics.

This page will focus on Julia. The other two languages have their own pages:

* [R for Biomathematics](https://biomath2024.netlify.app/biomath_r)

* [Python for Biomathematics](https://biomath2024.netlify.app/biomath_python)


### Envinronment Setup


*  Julia environments YouTube video, [watch video on YouTube](https://youtu.be/MC-wjQTXOOA?si=mdtPngyDg-m4I1Wa).
  
{{< video https://youtu.be/MC-wjQTXOOA?si=mdtPngyDg-m4I1Wa width="800" height="500" >}}



*  Managing Packages in Julia YouTube video, [watch video on YouTube](https://youtu.be/KldNhe4kvuk?si=63h0lTFtiPkKQWjL).
  
{{< video https://youtu.be/KldNhe4kvuk?si=63h0lTFtiPkKQWjL width="800" height="500" >}}


```{julia}
import Pkg
Pkg.status()
```



## Plotting 



## Matrices and Solving Linear Systems




## Root Finding



## Optimization



## Differential Equations


*  Intro to Differential Equations in Julia YouTube video, [watch video on YouTube](https://youtu.be/lWmKCa6ih9Y?si=HU-JBSqsP-v1lX4q).
  
{{< video https://youtu.be/lWmKCa6ih9Y?si=HU-JBSqsP-v1lX4q width="800" height="500" >}}



## Dynamical Systems



## Partial Differential Equations



## Random Variables



## Symbolic Math

*  Symbolic Computation in Julia YouTube video, [watch video on YouTube](https://youtu.be/L47k2zjPU9s?si=MIiUEqrL-dPzM__l).
  
{{< video https://youtu.be/L47k2zjPU9s?si=MIiUEqrL-dPzM__l width="800" height="500" >}}




## References

::: {#refs}
:::


[![](http://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-nc-sa.png?raw=1){fig-align="left" width=15%}](https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode)
