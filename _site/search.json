[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "Welcome to MATH 463 Topics in Biomathematics for Spring 2024! This page contains the syllabus for the course. We begin with a brief description of Biomathematics, followed by information about the instructor, course materials, and course policies.\n\n\nBiomathematics is concerned with the use of mathematical methods (e.g., linear algebra, differential equations, dynamical systems, and probability theory) to understand phenomenon in the life sciences, it is part of the larger field of mathematical and theoretical biology. Mathematical and theoretical biology provide a solid foundation for computational and quantitative approaches to investigations in biology and medicine.\n\n\n\n\n\n\n\n\n\n\nInstructor: Jason M. Graham\nOffice Location: LSC 319A\nOffice Hours for Students: Students are welcome and encouraged to visit my office Mondays 1:30 - 2:30; Wednesdays 10:30 - 11:30 and 1:30 - 2:30. You may also make an appointment via email to meet with me outside of these scheduled office hours, view my general schedule. Appointments are not necessary for regularly scheduled student office hours.\n\n\n\n\n\nEmail: jason.graham@scranton.edu\nPhone: (570) 941-7491\nCourse Page: https://biomath2024.netlify.app/\nCourse Repository: https://github.com/jmgraham30/biomath_2024\n\n\n\n\n\n\nAll students in MATH 463 from Spring, 2024 will be expected to have access to the following required textbook:\n\n\n\n\nTopics in Applied Mathematics and Modeling: Concise Theory with Case Studies by Oscar Gonzalez, ISBN: 978-1-4704-6991-7\nTopics in Applied Mathematics and Modeling (TAMM) covers basic concepts and techniques in mathematical modeling and applied mathematics that we will use throughout the course. We will study all of chapters 1 - 4 and possibly some of chapter 5. Many problems from the book will be assigned for homework.\n\n\n\n\n\n\n\nAdditionally, we will often refer to the following journal articles:\n\nSusceptible-Infected-Susceptible type COVID-19 spread with collective effects, Amanda Crocker and Daniel Strömbom, Scientific Reports 13, Article number 22600 (2023).\nWhy Wolbachia-induced cytoplasmic incompatibility is so common, Michael Turelli, Andrew Katznelson, and Paul S. Ginsberg. Proceedings of the National Academy of Sciences, 119, no. 47 (2022): e2211637119.\nGeneral model of inflammation, Megan C. Herald, Bulletin of mathematical biology, 72, (2010) pp. 765-779.\n\n\n\n\nOccasionally in the course we will make reference to topics from the following recommended texts. These books are not required for the course and students are not expected to purchase them.\n\n\n\n\n\n\n\nA Course in Mathematical Biology: Quantitative Modeling with Mathematical and Computational Methods by Gerda de Vries, Thomas Hillen, Mark Lewis, Johannes Müller, and Birgitt Schönfisch. ISBN: 978-0-89871-612-2.\nA Course in Mathematical Biology (ACMB) covers common approaches to the mathematical modeling of biological systems. We will study select topics from the book based on the interests of the students and instructor, and as time permits.\n\n\n\n\n\n\n\n\n\n\n\nBiology in Time and Space: A Partial Differential Equation Modeling Approach by James P. Keener, ISBN: 978-1-4704-5428-9\nBiology in Time and Space (BTS) covers common approaches to the mathematical modeling of biological systems using differential equations. We will study select topics from the book based on the interests of the students and instructor, and as time permits.\n\n\n\n\n\n\n\n\n\n\n\nSolving Differential Equations in R by Karline Soetaert, Jeff Cash, and Francesca Mazzia. ISBN: 978-3-642-28069-6.\nThis book covers practical aspects of using R in solving numerically the types of differential equations we will study in this course as mathematical models for biological systems.\nElectronic access to Solving Differential Equations in R is available through the Weinberg Memorial Library. Access the book. See also the article Solving Differential Equations in R.\n\n\n\n\nAdditionally, you may find the Spring 2022 MATH 463 Course Page: https://topicsinbiomath.netlify.app/ useful. It contains links to course notes and other materials from when the course was taught in Spring 2022.\n\n\n\nTo go deeper into the topics covered in this course, the following books are recommended. These books are not required for the course and students are not expected to purchase them. However, these may be valuable sources for topics for a final project or for further study.\n\n\n\n\nMathematical Biology by J.D. Murray, ISBN: 978-0-387-95223-9\nMathematical Biology is an influential text covering a wide range of topics in mathematical biology. The most recent third edition of the book consists of two volumes, see the Wikipedia article on the book for more details.\n\n\n\n\n\n\n\n\n\nAn Introduction to Modeling Neuronal Dynamics by Christoph Börgers, ISBN: 978-3-319-84585-2\nAn Introduction to Modeling Neuronal Dynamics covers the basics of mathematical and computational neuroscience. In particular, the book covers the Hodgkin-Huxley model of the action potential, the FitzHugh-Nagumo model, and the Wilson-Cowan model of interacting populations of neurons. The book also covers some mathematical techniques for analyzing nonlinear dynamical systems models for neuroscience.\n\n\n\n\n\n\n\n\n\nAn Introduction to Undergraduate Research in Computational and Mathematical Biology From Birdsongs to Viscosities edited by Hannah Callender Highlander, Alex Capaldi, and Carrie Diaz Eaton, ISBN: 978-3-030-33647-9\nAn Introduction to Undergraduate Research in Computational and Mathematical Biology From Birdsongs to Viscosities contains chapters covering a variety of topics in current research in computational and mathematical biology meant to engage undergraduate students.\n\n\n\n\n\n\n\n\n\nDynamics of cancer by Natalia Komarova and Dominik Woodarz, ISBN: 978-981-4566-36-0\nDynamics of cancer aims to provide an introduction to mathematical models that describe the dynamics of tumor growth and the evolution of tumor cells. The book has a strong evolutionary component and reflects the viewpoint that cancer can be understood rationally through a combination of mathematical and biological tools.\n\n\n\n\n\n\n\n\n\n\nWork and research in Biomathematics requires students and professionals in the field to make use of computing and digital technology. The primary uses of digital technology in Biomathematics is for producing and importing data, scientific computing, visualization of data and model-based simulations, and preparing written documents to present scientific results. Students in this course will be expected to make some use of computing and technical writing. Two commonly used technological tools are R for scientific computing and \\(\\LaTeX\\) for technical writing. This course will emphasize the use of R which can be installed to any platform via the downloads available here. R is best used with the integrative development environment RStudio which can be installed from here. Further, RStudio facilitates the integration of code and technical writing in \\(\\LaTeX\\) via the Quarto system. The progamming languages Julia and Python are also commonly used in scientific computing and are also available for free.\nThe course website contains reference pages for scientific computing for Biomathematics using R, Julia, and Python.\n\nView the R reference\nView the Julia reference\nView the Python reference\n\n\n\n\n\n\n\nA study of discrete and continuous mathematical models in biology. Topics include: population dynamics of single species and interacting species, infectious diseases, population genetics, and cell populations with tumor modeling.\n\n\n\nThe prerequisites for this course is MATH 341 Differential Equations and MATH 351 Linear Algebra. Specifically, the students are expected to have a solid foundation in calculus, and a working knowledge of elementary linear algebra and basic ordinary differential equations (ODEs). Some topics from probability and statistics will be used, but these will be reviewed as needed. Additionally, some topics from linear algebra and differential equations may be reviewed or presented from a different perspective than MATH 341 or MATH 351. No background in programming is assumed.\n\n\n\n\n\n\n\n\nTable 1: Course objectives and assessment.\n\n\nAfter taking this course, the student should be able to:\nMethods of assessment\n\n\n\n\nUse mathematical tools from calculus, differential equations, and linear algebra to analyze foundational mathematical models arising in the life sciences.\nHomework assignments and in-class written exams.\n\n\nInterpret the meaning of mathematical equations or models representing various biological processes.\nHomework assignments, model reports, and final project.\n\n\nUtilize computing tools such as R to analyze and interpret data-driven mathematical models.\nHomework assignments, model reports, and final project.\n\n\nCommunicate effectively in writing their work in applying the techniques of applied mathematics to problems arising in the life sciences.\nHomework, model reports, and final project consisting of a written paper.\n\n\n\n\n\n\n\n\n\n\nThe student learning objectives of this course are linked with the Mathematics Program Learning Outcome\n\n“Demonstrate competence in analytical and critical reasoning.”\n“Demonstrate college-level knowledge in applied mathematics.”\n\n\n\n\nMATH 463 has been designated an EPW Level II course. In order to fulfill the learning objectives for EPW Level II students will be asked to complete two writing intensive assignments. These are\n\na model report assignment,\nand a final project.\n\nDetails for these assignments are described below and additional guidelines are posted on the course learning management system.\n\n\n\n\n\n\nClass attendance and active participation in class discussion is strongly encouraged. If absence is necessary, please inform the instructor and develop a plan to make up for missing content as soon as possible.\n\n\n\n\n\nThe course grade will be based on two in-class exams (totaling 50% and evenly distributed), approximately ten weekly homework assignments (15%), one model report (10%), and a final project (25%).\n\n\n\nLetter grades will be assigned based on the following scale:\n\n\n\n\nTable 2: Letter grade scale.\n\n\nGrade Range\nLetter Grade\n\n\n\n\n94-100\nA\n\n\n90-93\nA-\n\n\n87-89\nB+\n\n\n83-86\nB\n\n\n80-82\nB-\n\n\n76-79\nC+\n\n\n72-75\nC\n\n\n69-71\nC-\n\n\n65-68\nD+\n\n\n60-64\nD\n\n\n&lt;60\nF\n\n\n\n\n\n\n\n\n\n\n\n\nArtificial intelligence (AI) can be an effective tool in science. For example, AI-based programming assistants like GitHub Copilot or generative model platforms like ChatGPT now help programmers to write better code in less time. Learning to use AI effectively and responsibly is quickly becoming a basic skill for the modern scientist. Because of this, I do not want to completely discourage the use of AI assistance.\nHowever, I ask that you avoid using AI platforms or tools in a manner that is inappropriate in the context of this course. This course teaches a variety of concepts, skills, and critical thinking. Using AI in such a way as to avoid learning, developing skills, or critical thinking is not appropriate. If you find yourself using AI to look up answers, search for complete solutions to problems, or things like this, then your use of AI is not acceptable. It might be helpful to think of AI as an analog to a calculator. If the goal of an assignment is for you to demonstrate that you can do a certain calculation, then using a calculator is not appropriate. On the other hand, if the goal of an assignment is for you to demonstrate that you can solve a problem for which a minor step involves doing a calculation, then using a calculator is okay. AI use in the context of this course should be treated analogously.\nIn particular, it is expected that students will be able to explain independently and in detail any work or ideas on assignments this semester. Also, it is expected that students can explain independently and in detail the solution to any problem submitted as part of an assignment this semester.\nIf you have any doubts about your use of AI, then either ask the instructor if your use of AI is acceptable or just don’t use AI.\n\n\n\n\n\n\nThere will be weekly homework assignments. Assignments will be posted on the course learning management system and made up of problems relating to or extending the material covered in class discussions. Working problems is essential to learning the material and doing well on exams.\nDo not underestimate the value (and joy) of carefully working through homework problems.\n\n\n\nThe in-class exams are meant to assess 1) students’ understanding of the material covered in class and in homework assignments, 2) students’ understanding of the core concepts, 3) students’ problem solving abilities, and 4) students’ ability to think independently. Exam 1 is scheduled for March 6, and Exam 2 is scheduled for May 1. In writing the tests, I assume that you have been studying the material at least 6 hours per week outside of class.\n\n\n\nAs part of the required coursework for Topics in Biomathematics, students are asked to submit a model report. The goal of this assignment is for students to read, understand, assess, and explain modeling results from a recently published paper in theoretical or quantitative biology or biomathematics. The model report will make up 10% of the course grade. Students must submit at least two drafts of a model report. A model report should be four to five typed pages and prepared using \\(\\LaTeX\\) or R Markdown. The first draft is due March 25 and the final draft is due May 3. A set of guidelines for the model report can be found on the course learning management system.\n\n\n\nIt should be recognized that the mathematical techniques developed in class are applicable in broader situations than can be covered in lectures and homework. Thus, students are asked to individually explore a topic in biomathematics beyond what is covered in lecture by means of a final project. Final projects should be an 8-12 page manuscript prepared using \\(\\LaTeX\\) or R Markdown, and students must submit at least two drafts of their written final projects. The final draft is due no later than 5:00pm on Wednesday May 15. All written and presented work must be original, explained in your own words, and use proper citation for works referenced.\nA set of guidelines for the final project is posted on the course learning management system. You must choose a topic for your final project and submit a one to two paragraph description of your proposed project along with at least two scholarly references to me no later than 5:00pm on March 1.\n\n\n\n\n\n\n\nWeek 1 (01/22-01/26): Introduction to Biomathematics\nWeek 2 (01/29-02/02): Dimensional Analysis and Scaling\nWeek 3 (02/05-02/09): One-Dimensional Dynamics and Introduction to Population Dynamics\nWeek 4 (02/12-02/16): Bifurcation Theory and Compartment Models\nWeek 5 (02/19-02/23): SIR Type Models and The Chemostat Bio-reactor\nWeek 6 (02/26-03/01): Functional Forms\nWeek 7 (03/04-03/08): Exam 1\nWeek 8 (03/11-03/15): Spring Break\nWeek 9 (03/18-03/22): Two-Dimensional Dynamics and Phase Plane Analysis\nWeek 10 (03/25-03/29): Mass Action and Reaction Kinetics/ Easter Break; Model Report Draft 1 Due\nWeek 11 (04/01-04/05): Easter Break/ Mass Action and Reaction Kinetics\nWeek 12 (04/08-04/12): Mathematical Physiology\nWeek 13 (04/15-04/19): Perturbation Methods\nWeek 14 (04/22-04/26): Additional Topics\nWeek 15 (04/29-05/03): Exam 2; Model Report Final Draft Due\nWeek 16 (05/06-05/10): Dead Week\nWeek 17 (05/13-05/17): Final Exams; Final Project Due\n\n\n\n\n\n\n\n\nTable 3: Important Dates\n\n\nEvent\nDate\n\n\n\n\nClasses begin\nWednesday, January 24\n\n\nLast day to add classes\nTuesday, January 30\n\n\nLast day for 100% tution refund\nFriday, February 2\n\n\nLast day to drop with no grade\nFriday, February 23\n\n\nExam 1\nWednesday, March 6\n\n\nLast day of class before spring break\nFriday, March 8\n\n\nClasses resume after spring break\nMonday, March 18\n\n\nSemester Midpoint\nWednesday, March 20\n\n\nLast day of class before Easter break\nWednesday, March 27\n\n\nClasses resume after Easter\nTuesday, April 2\n\n\nLast day to withdraw with W grade\nFriday, April 12\n\n\nExam 2\nWednesday, May 1\n\n\nLast day of class\nFriday, May 10\n\n\nFinal exams begin\nMonday, May 13\n\n\nFinal exams end\nFriday, May 17\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReasonable academic accommodations may be provided to students who submit relevant and current documentation of their disability. Students are encouraged to contact the Center for Teaching and Learning Excellence (CTLE) at disabilityservices@scranton.edu or (570) 941-4038 if they have or think they may have a disability and wish to determine eligibility for any accommodations. For more information, please visit http://www.scranton.edu/disabilities.\n\n\n\nThe Writing Center focuses on helping students become better writers. Consultants will work one-on-one with students to discuss students’ work and provide feedback at any stage of the writing process. Scheduling appointments early in the writing progress is encouraged.\nTo meet with a writing consultant, call (570) 941-6147 to schedule an appointment, or send an email with your available meeting times, the course for which you need assistance, and your phone number to: writing-center@scranton.edu. The Writing Center does offer online appointments for our distance learning students.\n\n\n\nEach student is expected to do their own work. It is also expected that each student respect and abide by the Academic Code of Honesty as set forth in the University of Scranton student handbook. Conduct that violates the Academic Code of Honesty includes plagiarism, duplicate submission of the same work, collusion, providing false information, unauthorized use of computers, theft and destruction of property, and unauthorized possession of tests and other materials. Steps taken in response to suspected violations may include a discussion with the instructor, an informal meeting with the dean of the college, and a hearing before the Academic Dishonesty Hearing Board. Students who are found to have violated the Code will ordinarily be assigned the grade F by the instructor and may face other sanctions. The complete Academic Code of Honesty is located on the University website at https://www.scranton.edu/academics/wml/acad-integ/acad-code-honesty.shtml.\n\n\n\nAs a faculty member, I am deeply invested in the well-being of each student I teach. I am here to assist you with your work in this course. Additionally, if you come to me with other non-course-related concerns, I will do my best to help. It is important for you to know that all faculty members are required to report incidents of sexual harassment or sexual misconduct involving students. This means that I cannot keep information about sexual harassment, sexual assault, sexual exploitation, intimate partner violence or stalking confidential if you share that information with me. I will keep the information as private as I can but am required to bring it to the attention of the University’s Title IX Coordinator, Elizabeth M. Garcia, or Deputy Title IX Coordinator, Diana M. Collins, who, in conversation with you, will explain available support, resources, and options. I will not report anything to anybody without first letting you know and discussing choices as to how to proceed. The University’s Counseling Center (570-941-7620) is available to you as a confidential resource; counselors (in the counseling center) do not have an obligation to report to the Title IX Coordinator.\n\n\n\nThe University is committed to providing an educational, residential, and working environment that is free from harassment and discrimination. Members of the University community, applicants for employment or admissions, guests, and visitors have the right to be free from harassment or discrimination based on race, color, religion, ancestry, gender, sex, pregnancy, sexual orientation, gender identity or expression, age, disability, genetic information, national origin, veteran status, or any other status protected by applicable law.\nStudents who believe they have been subject to harassment or discrimination based on any of the above class of characteristics, or experience sexual harassment, sexual misconduct or gender discrimination should contact Elizabeth M. Garcia, Title IX Coordinator, (570) 941-6645 elizabeth.garcia2@scranton.edu, Deputy Title IX Coordinators Diana M. Collins (570) 941-6645 diana.collins@scranton.edu, or Ms. Lauren Rivera, AVP for Student Life and Dean of Students, at (570)941-7680 lauren.rivera@scranton.edu. The United States Department of Education’s Office for Civil Rights (OCR) enforces Title IX. Information regarding OCR may be found at &lt;www.ed.gov/about/offices/list/ocr/index.html&gt;\nThe University of Scranton Sexual Harassment and Sexual Misconduct Policy can be found online at https://www.scranton.edu/diversity. All reporting options and resources are available at https://www.scranton.edu/CARE.\n\n\n\nIt is easy to make assumptions about an individual’s pronouns, but we try not to! Please tell us in class or via a private email if you would like to let us know what your pronouns are, if/when you would like us (and others) to use them, and certainly feel free to correct us or others if we make a mistake. Using the pronouns that a person has indicated they prefer is considered both professional and polite, and as such we ask that all members of our class use the appropriate pronouns.\nIf you have questions about this, please feel free to look up more information here (https://www.mypronouns.org/) or email jason.graham@scranton.edu with any questions.\n\n\n\nMany students experience mental health challenges at some point in college. Struggles vary and might be related to academics, anxiety, depression, relationships, grief/loss, substance abuse, and other challenges. There are resources to help you and getting help is the smart and courageous thing to do.\n\nCounseling Center (6th Floor O’Hara Hall; 570-941-7620) – Free, confidential individual and group counseling is available on campus.\nTeletherapy – For students who wish to access therapy via video, phone, and/or chat, the University offers a teletherapy resource. Please contact the Counseling Center (570-941-7620) to inquire about teletherapy.\nMental Health Screenings – Confidential, online “check up from your neck up” to help you determine if you should connect with a mental health professional.\nDean of Students Office (201 DeNaples Center; 570-941-7680) – Private support and guidance for students navigating personal challenges that may impact success at the University\n\n\n\n\n\nThe instructor reserves the right to modify this syllabus; students will immediately be notified of any such changes and an updated syllabus will be made available to the class via the course learning management system."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "links.html",
    "href": "links.html",
    "title": "Links and Additional Resources",
    "section": "",
    "text": "This page contains links to additional resources for learning and using the tools and techniques related to MATH 463."
  },
  {
    "objectID": "index.html#final-note",
    "href": "index.html#final-note",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "The instructor reserves the right to modify this syllabus; students will immediately be notified of any such changes and an updated syllabus will be made available to the class via the course learning management system."
  },
  {
    "objectID": "index.html#required-readings",
    "href": "index.html#required-readings",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Required Readings",
    "text": "Required Readings"
  },
  {
    "objectID": "index.html#instructor-information",
    "href": "index.html#instructor-information",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "Instructor: Jason M. Graham\nOffice Location: LSC 319A\nOffice Hours for Students: Students are welcome and encouraged to visit my office Mondays 1:30 - 2:30; Wednesdays 10:30 - 11:30 and 1:30 - 2:30. You may also make an appointment via email to meet with me outside of these scheduled office hours, view my general schedule. Appointments are not necessary for regularly scheduled student office hours.\n\n\n\n\n\nEmail: jason.graham@scranton.edu\nPhone: (570) 941-7491\nCourse Page: https://biomath2024.netlify.app/\nCourse Repository: https://github.com/jmgraham30/biomath_2024"
  },
  {
    "objectID": "index.html#university-resources-for-students-and-academic-honesty",
    "href": "index.html#university-resources-for-students-and-academic-honesty",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "Reasonable academic accommodations may be provided to students who submit relevant and current documentation of their disability. Students are encouraged to contact the Center for Teaching and Learning Excellence (CTLE) at disabilityservices@scranton.edu or (570) 941-4038 if they have or think they may have a disability and wish to determine eligibility for any accommodations. For more information, please visit http://www.scranton.edu/disabilities.\n\n\n\nThe Writing Center focuses on helping students become better writers. Consultants will work one-on-one with students to discuss students’ work and provide feedback at any stage of the writing process. Scheduling appointments early in the writing progress is encouraged.\nTo meet with a writing consultant, call (570) 941-6147 to schedule an appointment, or send an email with your available meeting times, the course for which you need assistance, and your phone number to: writing-center@scranton.edu. The Writing Center does offer online appointments for our distance learning students.\n\n\n\nEach student is expected to do their own work. It is also expected that each student respect and abide by the Academic Code of Honesty as set forth in the University of Scranton student handbook. Conduct that violates the Academic Code of Honesty includes plagiarism, duplicate submission of the same work, collusion, providing false information, unauthorized use of computers, theft and destruction of property, and unauthorized possession of tests and other materials. Steps taken in response to suspected violations may include a discussion with the instructor, an informal meeting with the dean of the college, and a hearing before the Academic Dishonesty Hearing Board. Students who are found to have violated the Code will ordinarily be assigned the grade F by the instructor and may face other sanctions. The complete Academic Code of Honesty is located on the University website at https://www.scranton.edu/academics/wml/acad-integ/acad-code-honesty.shtml.\n\n\n\nAs a faculty member, I am deeply invested in the well-being of each student I teach. I am here to assist you with your work in this course. Additionally, if you come to me with other non-course-related concerns, I will do my best to help. It is important for you to know that all faculty members are required to report incidents of sexual harassment or sexual misconduct involving students. This means that I cannot keep information about sexual harassment, sexual assault, sexual exploitation, intimate partner violence or stalking confidential if you share that information with me. I will keep the information as private as I can but am required to bring it to the attention of the University’s Title IX Coordinator, Elizabeth M. Garcia, or Deputy Title IX Coordinator, Diana M. Collins, who, in conversation with you, will explain available support, resources, and options. I will not report anything to anybody without first letting you know and discussing choices as to how to proceed. The University’s Counseling Center (570-941-7620) is available to you as a confidential resource; counselors (in the counseling center) do not have an obligation to report to the Title IX Coordinator.\n\n\n\nThe University is committed to providing an educational, residential, and working environment that is free from harassment and discrimination. Members of the University community, applicants for employment or admissions, guests, and visitors have the right to be free from harassment or discrimination based on race, color, religion, ancestry, gender, sex, pregnancy, sexual orientation, gender identity or expression, age, disability, genetic information, national origin, veteran status, or any other status protected by applicable law.\nStudents who believe they have been subject to harassment or discrimination based on any of the above class of characteristics, or experience sexual harassment, sexual misconduct or gender discrimination should contact Elizabeth M. Garcia, Title IX Coordinator, (570) 941-6645 elizabeth.garcia2@scranton.edu, Deputy Title IX Coordinators Diana M. Collins (570) 941-6645 diana.collins@scranton.edu, or Ms. Lauren Rivera, AVP for Student Life and Dean of Students, at (570)941-7680 lauren.rivera@scranton.edu. The United States Department of Education’s Office for Civil Rights (OCR) enforces Title IX. Information regarding OCR may be found at &lt;www.ed.gov/about/offices/list/ocr/index.html&gt;\nThe University of Scranton Sexual Harassment and Sexual Misconduct Policy can be found online at https://www.scranton.edu/diversity. All reporting options and resources are available at https://www.scranton.edu/CARE.\n\n\n\nIt is easy to make assumptions about an individual’s pronouns, but we try not to! Please tell us in class or via a private email if you would like to let us know what your pronouns are, if/when you would like us (and others) to use them, and certainly feel free to correct us or others if we make a mistake. Using the pronouns that a person has indicated they prefer is considered both professional and polite, and as such we ask that all members of our class use the appropriate pronouns.\nIf you have questions about this, please feel free to look up more information here (https://www.mypronouns.org/) or email jason.graham@scranton.edu with any questions.\n\n\n\nMany students experience mental health challenges at some point in college. Struggles vary and might be related to academics, anxiety, depression, relationships, grief/loss, substance abuse, and other challenges. There are resources to help you and getting help is the smart and courageous thing to do.\n\nCounseling Center (6th Floor O’Hara Hall; 570-941-7620) – Free, confidential individual and group counseling is available on campus.\nTeletherapy – For students who wish to access therapy via video, phone, and/or chat, the University offers a teletherapy resource. Please contact the Counseling Center (570-941-7620) to inquire about teletherapy.\nMental Health Screenings – Confidential, online “check up from your neck up” to help you determine if you should connect with a mental health professional.\nDean of Students Office (201 DeNaples Center; 570-941-7680) – Private support and guidance for students navigating personal challenges that may impact success at the University"
  },
  {
    "objectID": "index.html#course-materials",
    "href": "index.html#course-materials",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "All students in MATH 463 from Spring, 2024 will be expected to have access to the following required textbook:\n\n\n\n\nTopics in Applied Mathematics and Modeling: Concise Theory with Case Studies by Oscar Gonzalez, ISBN: 978-1-4704-6991-7\nTopics in Applied Mathematics and Modeling (TAMM) covers basic concepts and techniques in mathematical modeling and applied mathematics that we will use throughout the course. We will study all of chapters 1 - 4 and possibly some of chapter 5. Many problems from the book will be assigned for homework.\n\n\n\n\n\n\n\nAdditionally, we will often refer to the following journal articles:\n\nSusceptible-Infected-Susceptible type COVID-19 spread with collective effects, Amanda Crocker and Daniel Strömbom, Scientific Reports 13, Article number 22600 (2023).\nWhy Wolbachia-induced cytoplasmic incompatibility is so common, Michael Turelli, Andrew Katznelson, and Paul S. Ginsberg. Proceedings of the National Academy of Sciences, 119, no. 47 (2022): e2211637119.\nGeneral model of inflammation, Megan C. Herald, Bulletin of mathematical biology, 72, (2010) pp. 765-779.\n\n\n\n\nOccasionally in the course we will make reference to topics from the following recommended texts. These books are not required for the course and students are not expected to purchase them.\n\n\n\n\n\n\n\nA Course in Mathematical Biology: Quantitative Modeling with Mathematical and Computational Methods by Gerda de Vries, Thomas Hillen, Mark Lewis, Johannes Müller, and Birgitt Schönfisch. ISBN: 978-0-89871-612-2.\nA Course in Mathematical Biology (ACMB) covers common approaches to the mathematical modeling of biological systems. We will study select topics from the book based on the interests of the students and instructor, and as time permits.\n\n\n\n\n\n\n\n\n\n\n\nBiology in Time and Space: A Partial Differential Equation Modeling Approach by James P. Keener, ISBN: 978-1-4704-5428-9\nBiology in Time and Space (BTS) covers common approaches to the mathematical modeling of biological systems using differential equations. We will study select topics from the book based on the interests of the students and instructor, and as time permits.\n\n\n\n\n\n\n\n\n\n\n\nSolving Differential Equations in R by Karline Soetaert, Jeff Cash, and Francesca Mazzia. ISBN: 978-3-642-28069-6.\nThis book covers practical aspects of using R in solving numerically the types of differential equations we will study in this course as mathematical models for biological systems.\nElectronic access to Solving Differential Equations in R is available through the Weinberg Memorial Library. Access the book. See also the article Solving Differential Equations in R.\n\n\n\n\nAdditionally, you may find the Spring 2022 MATH 463 Course Page: https://topicsinbiomath.netlify.app/ useful. It contains links to course notes and other materials from when the course was taught in Spring 2022.\n\n\n\nTo go deeper into the topics covered in this course, the following books are recommended. These books are not required for the course and students are not expected to purchase them. However, these may be valuable sources for topics for a final project or for further study.\n\n\n\n\nMathematical Biology by J.D. Murray, ISBN: 978-0-387-95223-9\nMathematical Biology is an influential text covering a wide range of topics in mathematical biology. The most recent third edition of the book consists of two volumes, see the Wikipedia article on the book for more details.\n\n\n\n\n\n\n\n\n\nAn Introduction to Modeling Neuronal Dynamics by Christoph Börgers, ISBN: 978-3-319-84585-2\nAn Introduction to Modeling Neuronal Dynamics covers the basics of mathematical and computational neuroscience. In particular, the book covers the Hodgkin-Huxley model of the action potential, the FitzHugh-Nagumo model, and the Wilson-Cowan model of interacting populations of neurons. The book also covers some mathematical techniques for analyzing nonlinear dynamical systems models for neuroscience.\n\n\n\n\n\n\n\n\n\nAn Introduction to Undergraduate Research in Computational and Mathematical Biology From Birdsongs to Viscosities edited by Hannah Callender Highlander, Alex Capaldi, and Carrie Diaz Eaton, ISBN: 978-3-030-33647-9\nAn Introduction to Undergraduate Research in Computational and Mathematical Biology From Birdsongs to Viscosities contains chapters covering a variety of topics in current research in computational and mathematical biology meant to engage undergraduate students.\n\n\n\n\n\n\n\n\n\nDynamics of cancer by Natalia Komarova and Dominik Woodarz, ISBN: 978-981-4566-36-0\nDynamics of cancer aims to provide an introduction to mathematical models that describe the dynamics of tumor growth and the evolution of tumor cells. The book has a strong evolutionary component and reflects the viewpoint that cancer can be understood rationally through a combination of mathematical and biological tools.\n\n\n\n\n\n\n\n\n\n\nWork and research in Biomathematics requires students and professionals in the field to make use of computing and digital technology. The primary uses of digital technology in Biomathematics is for producing and importing data, scientific computing, visualization of data and model-based simulations, and preparing written documents to present scientific results. Students in this course will be expected to make some use of computing and technical writing. Two commonly used technological tools are R for scientific computing and \\(\\LaTeX\\) for technical writing. This course will emphasize the use of R which can be installed to any platform via the downloads available here. R is best used with the integrative development environment RStudio which can be installed from here. Further, RStudio facilitates the integration of code and technical writing in \\(\\LaTeX\\) via the Quarto system. The progamming languages Julia and Python are also commonly used in scientific computing and are also available for free.\nThe course website contains reference pages for scientific computing for Biomathematics using R, Julia, and Python.\n\nView the R reference\nView the Julia reference\nView the Python reference"
  },
  {
    "objectID": "index.html#what-is-biomathematics",
    "href": "index.html#what-is-biomathematics",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "Biomathematics is concerned with the use of mathematical methods (e.g., linear algebra, differential equations, dynamical systems, and probability theory) to understand phenomenon in the life sciences, it is part of the larger field of mathematical and theoretical biology. Mathematical and theoretical biology provide a solid foundation for computational and quantitative approaches to investigations in biology and medicine."
  },
  {
    "objectID": "index.html#course-information",
    "href": "index.html#course-information",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "A study of discrete and continuous mathematical models in biology. Topics include: population dynamics of single species and interacting species, infectious diseases, population genetics, and cell populations with tumor modeling.\n\n\n\nThe prerequisites for this course is MATH 341 Differential Equations and MATH 351 Linear Algebra. Specifically, the students are expected to have a solid foundation in calculus, and a working knowledge of elementary linear algebra and basic ordinary differential equations (ODEs). Some topics from probability and statistics will be used, but these will be reviewed as needed. Additionally, some topics from linear algebra and differential equations may be reviewed or presented from a different perspective than MATH 341 or MATH 351. No background in programming is assumed."
  },
  {
    "objectID": "index.html#student-learning-objectives-and-assessment",
    "href": "index.html#student-learning-objectives-and-assessment",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "Table 1: Course objectives and assessment.\n\n\nAfter taking this course, the student should be able to:\nMethods of assessment\n\n\n\n\nUse mathematical tools from calculus, differential equations, and linear algebra to analyze foundational mathematical models arising in the life sciences.\nHomework assignments and in-class written exams.\n\n\nInterpret the meaning of mathematical equations or models representing various biological processes.\nHomework assignments, model reports, and final project.\n\n\nUtilize computing tools such as R to analyze and interpret data-driven mathematical models.\nHomework assignments, model reports, and final project.\n\n\nCommunicate effectively in writing their work in applying the techniques of applied mathematics to problems arising in the life sciences.\nHomework, model reports, and final project consisting of a written paper.\n\n\n\n\n\n\n\n\n\n\nThe student learning objectives of this course are linked with the Mathematics Program Learning Outcome\n\n“Demonstrate competence in analytical and critical reasoning.”\n“Demonstrate college-level knowledge in applied mathematics.”\n\n\n\n\nMATH 463 has been designated an EPW Level II course. In order to fulfill the learning objectives for EPW Level II students will be asked to complete two writing intensive assignments. These are\n\na model report assignment,\nand a final project.\n\nDetails for these assignments are described below and additional guidelines are posted on the course learning management system."
  },
  {
    "objectID": "index.html#course-policies-and-procedures",
    "href": "index.html#course-policies-and-procedures",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "Class attendance and active participation in class discussion is strongly encouraged. If absence is necessary, please inform the instructor and develop a plan to make up for missing content as soon as possible.\n\n\n\n\n\nThe course grade will be based on two in-class exams (totaling 50% and evenly distributed), approximately ten weekly homework assignments (15%), one model report (10%), and a final project (25%).\n\n\n\nLetter grades will be assigned based on the following scale:\n\n\n\n\nTable 2: Letter grade scale.\n\n\nGrade Range\nLetter Grade\n\n\n\n\n94-100\nA\n\n\n90-93\nA-\n\n\n87-89\nB+\n\n\n83-86\nB\n\n\n80-82\nB-\n\n\n76-79\nC+\n\n\n72-75\nC\n\n\n69-71\nC-\n\n\n65-68\nD+\n\n\n60-64\nD\n\n\n&lt;60\nF\n\n\n\n\n\n\n\n\n\n\n\n\nArtificial intelligence (AI) can be an effective tool in science. For example, AI-based programming assistants like GitHub Copilot or generative model platforms like ChatGPT now help programmers to write better code in less time. Learning to use AI effectively and responsibly is quickly becoming a basic skill for the modern scientist. Because of this, I do not want to completely discourage the use of AI assistance.\nHowever, I ask that you avoid using AI platforms or tools in a manner that is inappropriate in the context of this course. This course teaches a variety of concepts, skills, and critical thinking. Using AI in such a way as to avoid learning, developing skills, or critical thinking is not appropriate. If you find yourself using AI to look up answers, search for complete solutions to problems, or things like this, then your use of AI is not acceptable. It might be helpful to think of AI as an analog to a calculator. If the goal of an assignment is for you to demonstrate that you can do a certain calculation, then using a calculator is not appropriate. On the other hand, if the goal of an assignment is for you to demonstrate that you can solve a problem for which a minor step involves doing a calculation, then using a calculator is okay. AI use in the context of this course should be treated analogously.\nIn particular, it is expected that students will be able to explain independently and in detail any work or ideas on assignments this semester. Also, it is expected that students can explain independently and in detail the solution to any problem submitted as part of an assignment this semester.\nIf you have any doubts about your use of AI, then either ask the instructor if your use of AI is acceptable or just don’t use AI."
  },
  {
    "objectID": "index.html#assignments",
    "href": "index.html#assignments",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "There will be weekly homework assignments. Assignments will be posted on the course learning management system and made up of problems relating to or extending the material covered in class discussions. Working problems is essential to learning the material and doing well on exams.\nDo not underestimate the value (and joy) of carefully working through homework problems.\n\n\n\nThe in-class exams are meant to assess 1) students’ understanding of the material covered in class and in homework assignments, 2) students’ understanding of the core concepts, 3) students’ problem solving abilities, and 4) students’ ability to think independently. Exam 1 is scheduled for March 6, and Exam 2 is scheduled for May 1. In writing the tests, I assume that you have been studying the material at least 6 hours per week outside of class.\n\n\n\nAs part of the required coursework for Topics in Biomathematics, students are asked to submit a model report. The goal of this assignment is for students to read, understand, assess, and explain modeling results from a recently published paper in theoretical or quantitative biology or biomathematics. The model report will make up 10% of the course grade. Students must submit at least two drafts of a model report. A model report should be four to five typed pages and prepared using \\(\\LaTeX\\) or R Markdown. The first draft is due March 25 and the final draft is due May 3. A set of guidelines for the model report can be found on the course learning management system.\n\n\n\nIt should be recognized that the mathematical techniques developed in class are applicable in broader situations than can be covered in lectures and homework. Thus, students are asked to individually explore a topic in biomathematics beyond what is covered in lecture by means of a final project. Final projects should be an 8-12 page manuscript prepared using \\(\\LaTeX\\) or R Markdown, and students must submit at least two drafts of their written final projects. The final draft is due no later than 5:00pm on Wednesday May 15. All written and presented work must be original, explained in your own words, and use proper citation for works referenced.\nA set of guidelines for the final project is posted on the course learning management system. You must choose a topic for your final project and submit a one to two paragraph description of your proposed project along with at least two scholarly references to me no later than 5:00pm on March 1."
  },
  {
    "objectID": "biomath_julia.html",
    "href": "biomath_julia.html",
    "title": "Julia for Biomathematics",
    "section": "",
    "text": "Artwork by Luxor"
  },
  {
    "objectID": "biomath_python.html",
    "href": "biomath_python.html",
    "title": "Python for Biomathematics",
    "section": "",
    "text": "Artwork by CevRiemann"
  },
  {
    "objectID": "links.html#websites-1",
    "href": "links.html#websites-1",
    "title": "Links and Additional Resources",
    "section": "Websites",
    "text": "Websites\n\nswirl - Learn R, in R."
  },
  {
    "objectID": "links.html#readings-1",
    "href": "links.html#readings-1",
    "title": "Links and Additional Resources",
    "section": "Readings",
    "text": "Readings\n\nIntroduction to Scientific Programming and Simulation Using R\nHands-On Programming with R"
  },
  {
    "objectID": "links.html#videos-1",
    "href": "links.html#videos-1",
    "title": "Links and Additional Resources",
    "section": "Videos",
    "text": "Videos\n\nLearn R in 39 minutes YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nR Programming Full Course for 2023 YouTube video, watch the video on YouTube."
  },
  {
    "objectID": "links.html#websites-2",
    "href": "links.html#websites-2",
    "title": "Links and Additional Resources",
    "section": "Websites",
    "text": "Websites"
  },
  {
    "objectID": "links.html#readings-2",
    "href": "links.html#readings-2",
    "title": "Links and Additional Resources",
    "section": "Readings",
    "text": "Readings"
  },
  {
    "objectID": "links.html#videos-2",
    "href": "links.html#videos-2",
    "title": "Links and Additional Resources",
    "section": "Videos",
    "text": "Videos"
  },
  {
    "objectID": "links.html#websites-3",
    "href": "links.html#websites-3",
    "title": "Links and Additional Resources",
    "section": "Websites",
    "text": "Websites"
  },
  {
    "objectID": "links.html#readings-3",
    "href": "links.html#readings-3",
    "title": "Links and Additional Resources",
    "section": "Readings",
    "text": "Readings"
  },
  {
    "objectID": "links.html#videos-3",
    "href": "links.html#videos-3",
    "title": "Links and Additional Resources",
    "section": "Videos",
    "text": "Videos"
  },
  {
    "objectID": "links.html#websites",
    "href": "links.html#websites",
    "title": "Links and Additional Resources",
    "section": "Websites",
    "text": "Websites"
  },
  {
    "objectID": "links.html#readings",
    "href": "links.html#readings",
    "title": "Links and Additional Resources",
    "section": "Readings",
    "text": "Readings"
  },
  {
    "objectID": "links.html#videos",
    "href": "links.html#videos",
    "title": "Links and Additional Resources",
    "section": "Videos",
    "text": "Videos"
  },
  {
    "objectID": "links.html#applied-math-resources",
    "href": "links.html#applied-math-resources",
    "title": "Links and Additional Resources",
    "section": "Applied Math Resources",
    "text": "Applied Math Resources\n\nWebsites\n\nSociety for Mathematical Biology.\nEuropean Society for Mathematical and Theoretical Biology.\nJournal of Mathematical Biology.\nBulletin of Mathematical Biology.\nJournal of Theoretical Biology.\nMathematical Biosciences and Engineering.\nPLoS Computational Biology.\nMathematical Biosciences Institute.\n\n\n\nReadings\n\nMathematical and Theoretical Biology Wikipedia article.\n\n\n\nVideos\n\nDifferential Equations and Dynamical Systems YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nDynamical Systems YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nTopics in Dynamical Systems YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nMathematical Biology at UC Irvine YouTube video, watch video on YouTube."
  },
  {
    "objectID": "links.html#r-resources",
    "href": "links.html#r-resources",
    "title": "Links and Additional Resources",
    "section": "R Resources",
    "text": "R Resources\n\nWebsites\n\nswirl - Learn R, in R.\n\n\n\nReadings\n\nIntroduction to Scientific Programming and Simulation Using R\nHands-On Programming with R\n\n\n\nVideos\n\nLearn R in 39 minutes YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nR Programming Full Course for 2023 YouTube video, watch the video on YouTube."
  },
  {
    "objectID": "links.html#julia-resources",
    "href": "links.html#julia-resources",
    "title": "Links and Additional Resources",
    "section": "Julia Resources",
    "text": "Julia Resources\n\nWebsites\n\nJulia programming for mathematics students.\n\n\n\nReadings\n\nJulia Language Documentation.\n\n\n\nVideos\n\nProgramming for Mathematicians with Julia (2023) YouTube video, watch the video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nPlotting in Julia YouTube video, watch the video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nBasic Linear Algebra with Julia YouTube video, watch the video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nIntro to Differential Equations in Julia YouTube video, watch the video on YouTube."
  },
  {
    "objectID": "links.html#python-resources",
    "href": "links.html#python-resources",
    "title": "Links and Additional Resources",
    "section": "Python Resources",
    "text": "Python Resources\n\nWebsites\n\nNumpy documentation page.\nScipy documentation page.\nMatplotlib documentation page.\nPy-pde documentation page.\n\n\n\nReadings\n\nGetting started with python for science.\n\n\n\nVideos\n\nMatplotlib Tutorial (Part 1): Creating and Customizing Our First Plots, watch the video on YouTube."
  },
  {
    "objectID": "links.html#biomathematics-resources",
    "href": "links.html#biomathematics-resources",
    "title": "Links and Additional Resources",
    "section": "Biomathematics Resources",
    "text": "Biomathematics Resources\n\nWebsites\n\nSociety for Mathematical Biology.\nEuropean Society for Mathematical and Theoretical Biology.\nJournal of Mathematical Biology.\nBulletin of Mathematical Biology.\nJournal of Theoretical Biology.\nMathematical Biosciences and Engineering.\nPLoS Computational Biology.\nMathematical Biosciences Institute.\n\n\n\nReadings\n\nMathematical and Theoretical Biology Wikipedia article.\nMathematical Biology Scholarpedia article.\nIntroducing Mathematical Biology Open Textbook.\n\n\n\nVideos\n\nDifferential Equations and Dynamical Systems YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nDynamical Systems YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nTopics in Dynamical Systems YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nMathematical Biology at UC Irvine YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to the Binomial Distribution YouTube video, watch video on YouTube.\n\n\n\n\n\n\n\n\n\n\n\nDerivation of the Diffusion Equation YouTube video, watch video on YouTube."
  },
  {
    "objectID": "intro_lecture/index.html#slides",
    "href": "intro_lecture/index.html#slides",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\nSlides at: https://biomath2024.netlify.app/intro_lecture"
  },
  {
    "objectID": "intro_lecture/index.html#overview",
    "href": "intro_lecture/index.html#overview",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Overview",
    "text": "Overview"
  },
  {
    "objectID": "intro_lecture/index.html#course-syllabus",
    "href": "intro_lecture/index.html#course-syllabus",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Course Syllabus",
    "text": "Course Syllabus\n\n\n\n\n\nCourse syllabus at: https://biomath2024.netlify.app/"
  },
  {
    "objectID": "biomath_r.html#plotting",
    "href": "biomath_r.html#plotting",
    "title": "R for Biomathematics",
    "section": "Plotting",
    "text": "Plotting\n\n# plot the function f(x) = x^2\nx &lt;- seq(-2, 2, length.out = 100)\ny &lt;- x^2\nggplot(data.frame(x = x, y = y), aes(x = x, y = y)) +\n  geom_line() +\n  labs(x = \"x\", y = \"y\", title = \"Plot of the function f(x) = x^2\")\n\n\n\n\nFigure 1: Plot of the function \\(f(x) = x^2\\).\n\n\n\n\n\n# plot the function f(x) = x^2\nggplot(data.frame(x = c(-2,2)), aes(x = x)) +\n  geom_function(fun = function(x){x^2},color=\"steelblue\",linewidth=1) +\n  theme_bw(base_size=13) +\n  labs(x = \"x\", y = \"y\", title = TeX(\"Plot of the function $f(x) = x^2$\"))\n\n\n\n\nFigure 2: Plot of the function \\(f(x) = x^2\\) using geom_function and some customizations.\n\n\n\n\n\n# plot the functions f(x) = x^2 and g(x) = x^3\nggplot(data.frame(x = c(-2,2)), aes(x = x)) +\n  geom_function(fun = function(x){x^2},aes(color=\"x^2\"),linewidth=1) +\n  geom_function(fun = function(x){x^3},aes(color=\"x^3\"),linewidth=1) +\n  theme_bw(base_size=13) +\n  labs(x = \"x\", y = \"y\", title = TeX(\"Plot of the functions $f(x) = x^2$ and $g(x) = x^3$\")) + \n  scale_color_manual(values = c(\"x^2\" = \"steelblue\", \"x^3\" = \"purple\"),\n                     labels = c(TeX(\"$x^2$\"), TeX(\"$x^3$\")))\n\n\n\n\nFigure 3: Plot of the functions \\(f(x) = x^2\\) and \\(g(x) = x^3\\) on same axes.\n\n\n\n\n\n# plot the functions f(x) = x^2 and g(x) = x^3\np_1 &lt;- ggplot(data.frame(x = c(-2,2)), aes(x = x)) +\n  geom_function(fun = function(x){x^2},color=\"steelblue\",linewidth=1) +\n  theme_bw(base_size=13) +\n  labs(x = \"x\", y = \"y\", title = TeX(\"Plot of the function $f(x) = x^2$\"))\n\np_2 &lt;- ggplot(data.frame(x = c(-2,2)), aes(x = x)) +\n  geom_function(fun = function(x){x^3},color=\"purple\",linewidth=1) +\n  theme_bw(base_size=13) +\n  labs(x = \"x\", y = \"y\", title = TeX(\"Plot of the function $g(x) = x^3$\"))\n\np_1 + p_2\n\n\n\n\nFigure 4: Plots of the functions \\(f(x) = x^2\\) and \\(g(x) = x^3\\).\n\n\n\n\n\nIntro to ggplot2 YouTube video, watch video on YouTube."
  },
  {
    "objectID": "biomath_r.html#matrices-and-solving-linear-systems",
    "href": "biomath_r.html#matrices-and-solving-linear-systems",
    "title": "R for Biomathematics",
    "section": "Matrices and Solving Linear Systems",
    "text": "Matrices and Solving Linear Systems"
  },
  {
    "objectID": "biomath_r.html#root-finding",
    "href": "biomath_r.html#root-finding",
    "title": "R for Biomathematics",
    "section": "Root Finding",
    "text": "Root Finding\nRoot finding is the process of finding one or more values \\(x\\) such that \\(f(x) = 0\\)2. A common application of root finding in biomathematics is to find the steady states of a dynamical system.\nThe rootSolve package provides a number of functions for root finding in R. The methods implemented in this package are particularly well-suited for biomathematics applications because it was developed with applications to steady-state problems in mind. Here’s an example of using the uniroot.all function to find all of the roots of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\):\n\n# load the rootSolve package\nlibrary(rootSolve)\n\n# define the function\nf &lt;- function(x){x^2 - 1}\n\n# find the roots\n(f_roots &lt;- uniroot.all(f, c(-2,2)))\n\n[1] -1  1\n\n# plot the function\nggplot(data.frame(x = c(-2,2)), aes(x = x)) +\n  geom_function(fun = function(x){x^2 - 1},color=\"steelblue\",linewidth=1) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_point(data=NULL,aes(x = f_roots, y = 0), color = \"purple\", size = 3) +\n  theme_bw(base_size=13) +\n  labs(x = \"x\", y = \"y\", title = TeX(\"Roots of the function $f(x) = x^2 - 1$ on the interval $[-2,2]$.\"))\n\n\n\n\nFigure 5: Roots of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\).\n\n\n\n\nHere’s an example of using the multiroot function to find all of the roots of the system of equations \\(f(x,y) = (x^2 + y^2 - 1, x^2 - y^2 + 0.5)\\):\n\n# define the function\nf &lt;- function(x) {\n  c(F1 = x[1]^2+ x[2]^2 -1,\n    F2 = x[1]^2- x[2]^2 +0.5)\n}\n\n# find the roots\nf_roots &lt;- multiroot(f, start = c(1,1))\n\n# return roots\nf_roots$root\n\n[1] 0.5000000 0.8660254\n\n\nLet’s check the solution:\n\nf(f_roots$root)\n\n          F1           F2 \n2.323138e-08 2.323308e-08 \n\n\nThe result is not exactly zero, but it’s close enough to zero that we can consider it a reasonable approximation."
  },
  {
    "objectID": "biomath_r.html#optimization",
    "href": "biomath_r.html#optimization",
    "title": "R for Biomathematics",
    "section": "Optimization",
    "text": "Optimization\nOptimization is the process of finding the extrema, that is, maximum or minimum value of a function. A common application of optimization in biomathematics is to estimate parameters for a mathematical model to fit data. One of the major challenges in such optimization problems is the potential for multiple local extrema. Here, introduce the use of basic optimization methods implemented in R. Additional details, examples, and applications will be covered in course lectures.\nBase R contains the optim function for optimization, specifically minimation. However, we will utilize the extension package optimx because it unifies or streamlines the use of several optimization methods. Here’s an example of using the optimr function to find the minimum of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\):\n\n# load the optimx package\nlibrary(optimx)\n\n# define the function\nf &lt;- function(x){x^2 - 1}\n\n# find the minimum\nf_min &lt;- optimr(-1, f, method=\"L-BFGS-B\",lower = -2, upper = 2)\n\n# plot the function\n\nggplot(data.frame(x = c(-2,2)), aes(x = x)) +\n  geom_function(fun = function(x){x^2 - 1},color=\"steelblue\",linewidth=1) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_point(data=NULL,aes(x = f_min$par, y = f_min$value), color = \"purple\", size = 3) +\n  theme_bw(base_size=13) +\n  labs(x = \"x\", y = \"y\", \n       title = TeX(\"Minimum of the function $f(x) = x^2 - 1$ on the interval $[-2,2]$.\"))\n\n\n\n\nFigure 6: Minimum of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\).\n\n\n\n\nHere’s an example of using the optimr function to find the minimum of the function \\(f(x,y) = x^2 + y^2 - 1\\):\n\n# define the function\nf &lt;- function(x) {\n  return(x[1]^2+ x[2]^2 -1)\n}\n\n# find the minimum\nf_min &lt;- optimr(c(1,1), f, method=\"L-BFGS-B\")\n\n# return minimum\nf_min$par\n\n[1] 7.049916e-15 7.049916e-15\nattr(,\"status\")\n[1] \" \" \" \""
  },
  {
    "objectID": "biomath_r.html#differential-equations",
    "href": "biomath_r.html#differential-equations",
    "title": "R for Biomathematics",
    "section": "Differential Equations",
    "text": "Differential Equations"
  },
  {
    "objectID": "biomath_r.html#dynamical-systems",
    "href": "biomath_r.html#dynamical-systems",
    "title": "R for Biomathematics",
    "section": "Dynamical Systems",
    "text": "Dynamical Systems"
  },
  {
    "objectID": "biomath_r.html#partial-differential-equations",
    "href": "biomath_r.html#partial-differential-equations",
    "title": "R for Biomathematics",
    "section": "Partial Differential Equations",
    "text": "Partial Differential Equations"
  },
  {
    "objectID": "biomath_julia.html#overview",
    "href": "biomath_julia.html#overview",
    "title": "Julia for Biomathematics",
    "section": "Overview",
    "text": "Overview\nScientific computing software plays a major role in biomathematics for many reasons some of which include:\n\nThe complexity of biological systems leads to models or equations that are difficult to work with analytically but can be handled reasonably well by numerical methods.\nThe need to synthesize theoretical models and data from experiments.\nPlots and other visualizations are important for understanding and communicating scientific ideas and results.\nComputing allows us to use theoretical models to conduct experiments in silico that would be difficult or impossible to conduct otherwise.\n\nThus, this course will make use of scientific computing software. Three commonly used free and open-source languages for scientific computing in biomathematics are R, Julia, and Python. In this course, we will mostly use R, but it’s worth knowing at least a little about scientific computing in all three languages as each of them has its own strengths and weaknesses in the context of scientific computing for biomathematics. The goal is not to teach you to become an expert in any of these languages, but rather to become familiar with how to use them to solve some basic problems in biomathematics. Thus, this document is more of a reference than a tutorial.\nThis page will focus on Julia. The other two languages have their own pages:\n\nR for Biomathematics\nPython for Biomathematics\n\nEach of these pages will have a similar structure to this one. We do not provide details on or even an introduction to the basics of programming or the structure of any of the languages. There are many resources available for learning these things. Instead, we focus on providing some concise examples of the use of these languages for scientific computing in biomathematics. The hope is that the reader will be able to copy and modify these examples to solve their own problems.\nThe section titles listed in the table of contents for the page should indicate the topics or types of problems we provide examples for. For some of the more involved code, we provide links to additional webpages that provide more details. In some cases, we provide links to potentially helpful videos or web sites where the reader can learn more."
  },
  {
    "objectID": "biomath_julia.html#plotting",
    "href": "biomath_julia.html#plotting",
    "title": "Julia for Biomathematics",
    "section": "Plotting",
    "text": "Plotting\n\nusing Plots, LaTeXStrings\n\n\nf(x) = x^2\nplot(f,-2.0,2.0, label=L\"$f(x)=x^2$\")\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Plot of \\(f(x)=x^2\\)\n\n\n\n\ng(x) = x^3\nplot!(g,-2.0,2.0, label=L\"$g(x)=x^3$\")\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Add plot of \\(g(x) = x^3\\) to plot of \\(f(x)=x^2\\)\n\n\n\n\nplot([f, g],-2.0,2.0, lw=2, lc=[\"steelblue\" \"purple\"],label=[L\"$f(x)=x^2$\" L\"$g(x)=x^3$\"])\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Plots of \\(f(x) = x^2\\) and \\(g(x)=x^3\\) on same axes with some customizations.\n\n\n\n\np_1 = plot(f,-2.0,2.0, lw=2, lc=\"steelblue\", title=L\"$f(x)=x^2$\")\np_2 = plot(g,-2.0,2.0, lw=2, lc=\"purple\", title=L\"$g(x)=x^3$\")\n\nplot(p_1,p_2, layout=(1,2), legend=false)\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Plots of \\(f(x) = x^2\\) and \\(g(x)=x^3\\).\n\n\n\n\nPlotting in Julia YouTube video, watch video on YouTube."
  },
  {
    "objectID": "biomath_julia.html#matrices-and-solving-linear-systems",
    "href": "biomath_julia.html#matrices-and-solving-linear-systems",
    "title": "Julia for Biomathematics",
    "section": "Matrices and Solving Linear Systems",
    "text": "Matrices and Solving Linear Systems"
  },
  {
    "objectID": "biomath_julia.html#root-finding",
    "href": "biomath_julia.html#root-finding",
    "title": "Julia for Biomathematics",
    "section": "Root Finding",
    "text": "Root Finding\nRoot finding is the process of finding one or more values \\(x\\) such that \\(f(x) = 0\\)3. A common application of root finding in biomathematics is to find the steady states of a dynamical system.\nThere are a number of different packages that facilitate root finding in Julia. Some notable one include:\n\nRoots.jl\n‘NLsolve.jl’\nNonlinearSolve.jl\n\nWe illustrate using the Roots.jl to find all of the roots of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\):\n\nusing Roots\n\nf(x) = x^2 - 1\n\nf_roots = find_zeros(f,-2.0,2.0)\n\n2-element Vector{Float64}:\n -1.0\n  1.0\n\n\nLet’s make a plot of the function and its roots:\n\nplot(f,-2.0,2.0, lc=\"steelblue\",lw=2, label=L\"$f(x)=x^2-1$\")\n\nscatter!(f_roots,zeros(length(f_roots)), color=\"purple\",label=\"roots\")\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: Roots of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\).\n\n\n\nThe Roots.jl package focuses on scalar functions. Let’s use the NonlinearSolve.jl package to find the roots of the system of equations \\(f(x,y) = (x^2 + y^2 - 1, x^2 - y^2 + 0.5)\\):\n\nusing ModelingToolkit, NonlinearSolve\n\n@variables x y\n@parameters σ ρ\n\neqs = [0 ~ x^2 + y^2 - σ,\n       0 ~ x^2 - y^2 + ρ]\n@named ns = NonlinearSystem(eqs, [x, y], [σ , ρ])\n\nu0 = [x =&gt; 1.0,\n    y =&gt; 1.0]\n\nps = [σ =&gt; 1.0\n    ρ =&gt; 0.5]\n\nprob = NonlinearProblem(ns, u0, ps)\nsol = solve(prob, NewtonRaphson())\n\nretcode: Success\nu: 2-element Vector{Float64}:\n 0.5000000000000006\n 0.8660254037844387\n\n\nThe last example shows off some of the features of the ModelingToolkit.jl package. We’ll learn more about this package in later sections but the point is that ModelingToolkit.jl allows us to combine numerical and symbolic mathematics. For example, we can print out the equations in the system in usual mathematical notation:\n\nequations(ns)\n\n\\[ \\begin{align}\n0 =&  - \\sigma + x^{2} + y^{2} \\\\\n0 =& \\rho + x^{2} - y^{2}\n\\end{align}\n\\]\n\n\nWe can also ask for symbolic expressions for the Jacobian matrix of the system:\n\ncalculate_jacobian(ns)\n\n\\[ \\begin{equation}\n\\left[\n\\begin{array}{cc}\n2 x & 2 y \\\\\n2 x &  - 2 y \\\\\n\\end{array}\n\\right]\n\\end{equation}\n\\]"
  },
  {
    "objectID": "biomath_julia.html#optimization",
    "href": "biomath_julia.html#optimization",
    "title": "Julia for Biomathematics",
    "section": "Optimization",
    "text": "Optimization\nOptimization is the process of finding the extrema, that is, maximum or minimum value of a function. A common application of optimization in biomathematics is to estimate parameters for a mathematical model to fit data. One of the major challenges in such optimization problems is the potential for multiple local extrema. Here, introduce the use of basic optimization methods implemented in Julia. Additional details, examples, and applications will be covered in course lectures.\nThere are a number of Julia packages for optimization. Here, we focus on the use of the Optim.jl package.Here’s an example of using the Optim.jl package to find the minimum of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\):\n\nusing Optim\n\nf(x) = x^2 - 1\n\nresult = optimize(f,-2.0,2.0)\n\nx_m = Optim.minimizer(result)\n\ny_m = Optim.minimum(result)\n\nplot(f,-2.0,2.0, lc=\"steelblue\",lw=2, label=L\"$f(x)=x^2-1$\")\n\nscatter!([x_m],[y_m], color=\"purple\",label=\"minimum\")\n\n[ Info: Precompiling Optim [429524aa-4258-5aef-a3af-852621145aeb]\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 6: Minimum of the function \\(f(x) = x^2 - 1\\) on the interval \\([-2,2]\\).\n\n\n\nHere’s an example of using the Optim.jl to find the minimum of the function \\(f(x,y) = x^2 + y^2 - 1\\):\n\nf(x) = x[1]^2 + x[2]^2 - 1\n\nresult = optimize(f,[-1.0,1.0], LBFGS(); autodiff = :forward)\n\nOptim.minimizer(result)\n\n2-element Vector{Float64}:\n 0.0\n 0.0"
  },
  {
    "objectID": "biomath_julia.html#differential-equations",
    "href": "biomath_julia.html#differential-equations",
    "title": "Julia for Biomathematics",
    "section": "Differential Equations",
    "text": "Differential Equations\n\nIntro to Differential Equations in Julia YouTube video, watch video on YouTube."
  },
  {
    "objectID": "biomath_julia.html#dynamical-systems",
    "href": "biomath_julia.html#dynamical-systems",
    "title": "Julia for Biomathematics",
    "section": "Dynamical Systems",
    "text": "Dynamical Systems"
  },
  {
    "objectID": "biomath_julia.html#partial-differential-equations",
    "href": "biomath_julia.html#partial-differential-equations",
    "title": "Julia for Biomathematics",
    "section": "Partial Differential Equations",
    "text": "Partial Differential Equations"
  },
  {
    "objectID": "biomath_python.html#plotting",
    "href": "biomath_python.html#plotting",
    "title": "Python for Biomathematics",
    "section": "Plotting",
    "text": "Plotting\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nplt.rcParams['text.usetex'] = True\n\n\nx = np.linspace(-2.0, 2.0, 101)\ny2 = np.power(x,2)\n\ndef f(x):\n    return np.power(x,2)\n\nfig, ax = plt.subplots(figsize=(7, 5), tight_layout=True)\n\nax.set_xlabel(r'\\textit{$x$}',fontsize=13)\nax.set_ylabel('\\\\textit{$y$}',fontsize=13)\nax.set_title(r'$f(x) = x^2$',fontsize=15)\nax.plot(x, f(x))\n\n\n\n\nFigure 1: Plot of \\(f(x)=x^2\\)\n\n\n\n\n\ndef g(x):\n    return np.power(x,3)\n  \n# Set custom figure size\nplt.figure(figsize=(8, 6))\n\n# Plot the curves\nplt.plot(x, f(x), label=r'$x^2$', color='steelblue', linewidth=2)\nplt.plot(x, g(x), label=r'$x^3$', color='purple', linewidth=2)\n\n# Add labels and title\nplt.xlabel(r'$x$',fontsize=13)\nplt.ylabel(r'$y$',fontsize=13)\nplt.title(r'$f(x) = x^2$',fontsize=13)\n\n# Add legend\nplt.legend()\n\n# Show the plot\nplt.grid(True)\nplt.show()\n\n\n\n\nFigure 2: Plot of \\(f(x)=x^2\\) and \\(g(x)=x^3\\) on same axes.\n\n\n\n\n\n# Create subplots\nfig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(8, 5))\n\n# Plot y = x^2\nax1.plot(x, f(x), color='steelblue', linewidth=2)\nax1.set_title(r'$f(x) = x^2$')\nax1.set_xlabel(r'$x$')\nax1.set_ylabel(r'$y$')\nax1.grid(True)\n\n# Plot y = x^3\nax2.plot(x, g(x), color='purple', linewidth=2)\nax2.set_title(r'$f(x) = x^3$')\nax2.set_xlabel(r'$x$')\nax2.set_ylabel(r'$y$')\nax2.grid(True)\n\n# Adjust layout to prevent overlap\nplt.tight_layout()\n\n# Show the subplots\nplt.show()\n\n\n\n\nFigure 3: Plot of \\(f(x)=x^2\\) and \\(g(x)=x^3\\).\n\n\n\n\n\nPlotting in Python YouTube video, watch video on YouTube."
  },
  {
    "objectID": "biomath_python.html#matrices-and-solving-linear-systems",
    "href": "biomath_python.html#matrices-and-solving-linear-systems",
    "title": "Python for Biomathematics",
    "section": "Matrices and Solving Linear Systems",
    "text": "Matrices and Solving Linear Systems"
  },
  {
    "objectID": "biomath_python.html#root-finding",
    "href": "biomath_python.html#root-finding",
    "title": "Python for Biomathematics",
    "section": "Root Finding",
    "text": "Root Finding\nRoot finding is the process of finding one or more values \\(x\\) such that \\(f(x) = 0\\)1. A common application of root finding in biomathematics is to find the steady states of a dynamical system.\nThe scipy.optimize module contains functions for root finding in Python. For example, following code uses the scipy.optimize.root_scalar function to find the roots of the function \\(f(x) = x^2 - 1\\) on \\([-2,2]\\).\nWe start by plotting the function to get an idea of where the roots are located.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef f(x):\n    return x**2 - 1\n  \nx = np.linspace(-2, 2, 101)\n\nplt.figure(figsize=(8, 6))\n\nplt.plot(x, f(x), color='steelblue', linewidth=2)\n\nplt.xlabel(r'$x$',fontsize=13)\n\nplt.ylabel(r'$y$',fontsize=13)\n\nplt.title(r'$f(x) = x^2 - 1$',fontsize=13)\n\nplt.grid(True)\n\nplt.show()\n\n\n\n\nNow, let’s compute the roots:\n\nfrom scipy import optimize\n\ndef f(x):\n    return x**2 - 1\n  \nroot_1 = optimize.root_scalar(f, bracket=[-2, 0])\nroot_2 = optimize.root_scalar(f, bracket=[0, 2])\n\nprint(root_1.root)\nprint(root_2.root)\n\n-1.0\n1.0\n\n\nFinally, let’s add the roots to the plot:\n\nplt.figure(figsize=(8, 6))\n\nplt.plot(x, f(x), color='steelblue', linewidth=2)\n\nplt.plot([root_1.root, root_2.root], [0, 0], 'o', color='purple', markersize=10)\n\nplt.xlabel(r'$x$',fontsize=13)\n\nplt.ylabel(r'$y$',fontsize=13)\n\nplt.title(r'$f(x) = x^2 - 1$',fontsize=13)\n\nplt.grid(True)\n\nplt.show()\n\n\n\n\nHere’s an example of using the scipy.optimize.root function to find a of root of the system of equations \\(f(x,y) = (x^2 + y^2 - 1, x^2 - y^2 + 0.5)\\):\n\ndef f(x):\n    return [x[0]**2 + x[1]**2 - 1, x[0]**2 - x[1]**2 + 0.5]\n  \nf_roots = optimize.root(f, [1.0, 1.0])\n\nprint(f_roots.x)\n\n[0.5       0.8660254]"
  },
  {
    "objectID": "biomath_python.html#optimization",
    "href": "biomath_python.html#optimization",
    "title": "Python for Biomathematics",
    "section": "Optimization",
    "text": "Optimization\nOptimization is the process of finding the extrema, that is, maximum or minimum value of a function. A common application of optimization in biomathematics is to estimate parameters for a mathematical model to fit data. One of the major challenges in such optimization problems is the potential for multiple local extrema. Here, introduce the use of basic optimization methods implemented in Python. Additional details, examples, and applications will be covered in course lectures.\nThe scipy.optimize module contains functions for optimization in Python. For example, following code uses the scipy.optimize.minimize function to find the minimum of the function \\(f(x) = x^2 - 1\\) on \\([-2,2]\\).\nWe start by plotting the function to get an idea of where the minimum is located.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef f(x):\n    return x**2 - 1\n  \nx = np.linspace(-2, 2, 101)\n\nplt.figure(figsize=(8, 6))\n\nplt.plot(x, f(x), color='steelblue', linewidth=2)\n\nplt.xlabel(r'$x$',fontsize=13)\n\nplt.ylabel(r'$y$',fontsize=13)\n\nplt.title(r'$f(x) = x^2 - 1$',fontsize=13)\n\nplt.grid(True)\n\nplt.show()\n\n\n\n\nNow, let’s compute the minimum:\n\nfrom scipy import optimize\n\ndef f(x):\n    return x**2 - 1\n\nmin_result = optimize.minimize(f, 0.2)\n\nprint(min_result.x)\n\n[4.28408381e-09]\n\n\nFinally, let’s add the minimum to the plot:\n\nplt.figure(figsize=(8, 6))\n\nplt.plot(x, f(x), color='steelblue', linewidth=2)\n\nplt.plot(min_result.x, f(min_result.x), 'o', color='purple', markersize=10)\n\nplt.xlabel(r'$x$',fontsize=13)\n\nplt.ylabel(r'$y$',fontsize=13)\n\nplt.title(r'$f(x) = x^2 - 1$',fontsize=13)\n\nplt.grid(True)\n\nplt.show()\n\n\n\n\nHere’s an example of using the scipy.optimize.minimize to find the minimum of the function \\(f(x,y) = x^2 + y^2 - 1\\):\n\ndef f(x):\n    return x[0]**2 + x[1]**2 - 1\n\n\nmin_result = optimize.minimize(f, [1.0, 1.0])\n\nprint(min_result.x)\n\n[-8.14241718e-09 -8.14241718e-09]"
  },
  {
    "objectID": "biomath_python.html#differential-equations",
    "href": "biomath_python.html#differential-equations",
    "title": "Python for Biomathematics",
    "section": "Differential Equations",
    "text": "Differential Equations"
  },
  {
    "objectID": "biomath_python.html#dynamical-systems",
    "href": "biomath_python.html#dynamical-systems",
    "title": "Python for Biomathematics",
    "section": "Dynamical Systems",
    "text": "Dynamical Systems"
  },
  {
    "objectID": "biomath_python.html#partial-differential-equations",
    "href": "biomath_python.html#partial-differential-equations",
    "title": "Python for Biomathematics",
    "section": "Partial Differential Equations",
    "text": "Partial Differential Equations"
  },
  {
    "objectID": "biomath_r.html",
    "href": "biomath_r.html",
    "title": "R for Biomathematics",
    "section": "",
    "text": "Artwork by Allison Horst"
  },
  {
    "objectID": "biomath_r.html#overview",
    "href": "biomath_r.html#overview",
    "title": "R for Biomathematics",
    "section": "Overview",
    "text": "Overview\nScientific computing software plays a major role in biomathematics for many reasons some of which include:\n\nThe complexity of biological systems leads to models or equations that are difficult to work with analytically but can be handled reasonably well by numerical methods.\nThe need to synthesize theoretical models and data from experiments.\nPlots and other visualizations are important for understanding and communicating scientific ideas and results.\nComputing allows us to use theoretical models to conduct experiments in silico that would be difficult or impossible to conduct otherwise.\n\nThus, this course will make use of scientific computing software. Three commonly used free and open-source languages for scientific computing in biomathematics are R, Julia, and Python. In this course, we will mostly use R, but it’s worth knowing at least a little about scientific computing in all three languages as each of them has its own strengths and weaknesses in the context of scientific computing for biomathematics. The goal is not to teach you to become an expert in any of these languages, but rather to become familiar with how to use them to solve some basic problems in biomathematics. Thus, this document is more of a reference than a tutorial.\nThis page will focus on R. The other two languages have their own pages:\n\nJulia for Biomathematics\nPython for Biomathematics\n\nEach of these pages will have a similar structure to this one. We do not provide details on or even an introduction to the basics of programming or the structure of any of the languages. There are many online resources available for learning these things. Instead, we focus on providing some concise examples of the use of these languages for scientific computing in biomathematics. The hope is that the reader will be able to copy and modify these examples to solve their own problems.\nThe section titles listed in the table of contents for the page should indicate the topics or types of problems we provide examples for. For some of the more involved code or examples, we provide links to other webpages for the code details. In some cases, we provide links to potentially helpful videos or web sites where the reader can learn more."
  },
  {
    "objectID": "biomath_r.html#references",
    "href": "biomath_r.html#references",
    "title": "R for Biomathematics",
    "section": "References",
    "text": "References\n\n\nAllen, Linda J. S. 2011. An Introduction to Stochastic Processes with Applications to Biology. Second. CRC Press, Boca Raton, FL. https://mathscinet.ams.org/mathscinet-getitem?mr=2560499.\n\n\nGrayling, Michael J. 2014. “phaseR: An R Package for Phase Plane Analysis of Autonomous ODE Systems.” The R Journal 6 (2): 43–51. https://doi.org/10.32614/RJ-2014-023.\n\n\nKarline Soetaert. 2009. rootSolve: Nonlinear Root Finding, Equilibrium and Steady-State Analysis of Ordinary Differential Equations.\n\n\nKarline Soetaert, Thomas Petzoldt, and R. Woodrow Setzer. 2010. “Solving Differential Equations in R: Package deSolve.” Journal of Statistical Software 33 (9): 1–25. https://doi.org/10.18637/jss.v033.i09.\n\n\nR Core Team. 2023. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\nSoetaert, Karline, and Filip Meysman. 2012. “Reactive Transport in Aquatic Ecosystems: Rapid Model Prototyping in the Open Source Software r.” Environmental Modelling & Software 32: 49–60.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\n\n\n\n\n\n\nExpand for Session Info\n\n\n\n\n\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31)\n os       macOS Sonoma 14.2.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/New_York\n date     2024-01-05\n pandoc   3.1.11 @ /opt/homebrew/bin/ (via rmarkdown)\n quarto   1.3.450 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version    date (UTC) lib source\n deSolve     * 1.40       2023-11-27 [1] CRAN (R 4.3.1)\n dplyr       * 1.1.4      2023-11-17 [1] CRAN (R 4.3.1)\n forcats     * 1.0.0      2023-01-29 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.4      2023-10-12 [1] CRAN (R 4.3.1)\n latex2exp   * 0.9.6      2022-11-28 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.3      2023-09-27 [1] CRAN (R 4.3.1)\n optimx      * 2023-10.21 2023-10-24 [1] CRAN (R 4.3.1)\n patchwork   * 1.1.3      2023-08-14 [1] CRAN (R 4.3.0)\n phaseR      * 2.2.1      2022-09-02 [1] CRAN (R 4.3.0)\n purrr       * 1.0.2      2023-08-10 [1] CRAN (R 4.3.0)\n ReacTran    * 1.4.3.1    2017-08-15 [1] CRAN (R 4.3.0)\n readr       * 2.1.4      2023-02-10 [1] CRAN (R 4.3.0)\n rootSolve   * 1.8.2.4    2023-09-21 [1] CRAN (R 4.3.1)\n sessioninfo * 1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n shape       * 1.4.6      2021-05-19 [1] CRAN (R 4.3.0)\n stringr     * 1.5.1      2023-11-14 [1] CRAN (R 4.3.1)\n tibble      * 3.2.1      2023-03-20 [1] CRAN (R 4.3.0)\n tidyr       * 1.3.0      2023-01-24 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0      2023-02-22 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "biomath_python.html#references",
    "href": "biomath_python.html#references",
    "title": "Python for Biomathematics",
    "section": "References",
    "text": "References\n\n\nAllen, Linda J. S. 2011. An Introduction to Stochastic Processes with Applications to Biology. Second. CRC Press, Boca Raton, FL. https://mathscinet.ams.org/mathscinet-getitem?mr=2560499.\n\n\nVan Rossum, Guido, and Fred L. Drake. 2009. Python 3 Reference Manual. Scotts Valley, CA: CreateSpace.\n\n\n\n\n\n\n\n\nExpand for Session Info\n\n\n\n\n\n\n\nShow the code\nimport sys\nimport numpy as np\nimport scipy as sp\nimport matplotlib as mpl\nprint(\"Python version:\", sys.version)\nprint('\\n'.join(f'{m.__name__}=={m.__version__}' for m in globals().values() if getattr(m, '__version__', None)))\n\n\nPython version: 3.8.18 | packaged by conda-forge | (default, Oct 10 2023, 15:46:56) \n[Clang 16.0.6 ]\nnumpy==1.24.4\nscipy==1.10.1\nmatplotlib==3.7.2"
  },
  {
    "objectID": "biomath_julia.html#references",
    "href": "biomath_julia.html#references",
    "title": "Julia for Biomathematics",
    "section": "References",
    "text": "References\n\n\nAllen, Linda J. S. 2011. An Introduction to Stochastic Processes with Applications to Biology. Second. CRC Press, Boca Raton, FL. https://mathscinet.ams.org/mathscinet-getitem?mr=2560499.\n\n\nBezanson, Jeff, Alan Edelman, Stefan Karpinski, and Viral B Shah. 2017. “Julia: A Fresh Approach to Numerical Computing.” SIAM Review 59 (1): 65–98. https://doi.org/10.1137/141000671.\n\n\n\n\n\n\n\n\nExpand for Session Info\n\n\n\n\n\n\n\nShow the code\nVERSION\n\n\nv\"1.9.4\"\n\n\n\n\nShow the code\n# import Pkg.jl package\nimport Pkg\n# list packages installed in environment\nPkg.status()\n\n\nStatus `~/Documents/GitHub/biomath_2024/Project.toml`\n⌃ [13f3f980] CairoMakie v0.11.4\n  [a93c6f00] DataFrames v1.6.1\n  [0c46a032] DifferentialEquations v7.12.0\n  [31c24e10] Distributions v0.25.104\n⌅ [5b8099bc] DomainSets v0.6.7\n  [634d3b9d] DrWatson v2.13.0\n  [61744808] DynamicalSystems v3.2.3\n  [b964fa9f] LaTeXStrings v1.3.1\n  [94925ecb] MethodOfLines v0.10.4\n  [961ee093] ModelingToolkit v8.75.0\n  [8913a72c] NonlinearSolve v3.4.0\n  [429524aa] Optim v1.7.8\n⌃ [7f7a1694] Optimization v3.20.2\n⌅ [1dea7af3] OrdinaryDiffEq v6.66.0\n  [91a5bcdd] Plots v1.39.0\n  [f2b01f46] Roots v2.0.22\n⌅ [0c5d862f] Symbolics v5.14.0\nInfo Packages marked with ⌃ and ⌅ have new versions available. Those with ⌃ may be upgradable, but those with ⌅ are restricted by compatibility constraints from upgrading. To see why use `status --outdated`"
  },
  {
    "objectID": "biomath_python.html#overview",
    "href": "biomath_python.html#overview",
    "title": "Python for Biomathematics",
    "section": "Overview",
    "text": "Overview\nScientific computing software plays a major role in biomathematics for many reasons some of which include:\n\nThe complexity of biological systems leads to models or equations that are difficult to work with analytically but can be handled reasonably well by numerical methods.\nThe need to synthesize theoretical models and data from experiments.\nPlots and other visualizations are important for understanding and communicating scientific ideas and results.\nComputing allows us to use theoretical models to conduct experiments in silico that would be difficult or impossible to conduct otherwise.\n\nThus, this course will make use of scientific computing software. Three commonly used free and open-source languages for scientific computing in biomathematics are R, Julia, and Python. In this course, we will mostly use R, but it’s worth knowing at least a little about scientific computing in all three languages as each of them has its own strengths and weaknesses in the context of scientific computing for biomathematics. The goal is not to teach you to become an expert in any of these languages, but rather to become familiar with how to use them to solve some basic problems in biomathematics. Thus, this document is more of a reference than a tutorial.\nThis page will focus on Python. The other two languages have their own pages:\n\nJulia for Biomathematics\nR for Biomathematics\n\nEach of these pages will have a similar structure to this one. We do not provide details on or even an introduction to the basics of programming or the structure of any of the languages. There are many resources available for learning these things. Instead, we focus on providing some concise examples of the use of these languages for scientific computing in biomathematics. The hope is that the reader will be able to copy and modify these examples to solve their own problems.\nThe section titles listed in the table of contents for the page should indicate the topics or types of problems we provide examples for. For some of the more involved code, we provide links to additional webpages that provide more details. In some cases, we provide links to potentially helpful videos or web sites where the reader can learn more."
  },
  {
    "objectID": "biomath_r.html#random-variables",
    "href": "biomath_r.html#random-variables",
    "title": "R for Biomathematics",
    "section": "Random Variables",
    "text": "Random Variables\nWhile MATH 463 primarily focuses on deterministic models, stochastic models are also important in biomathematics, see for example (Allen 2011). We won’t cover stochastic models in the course but will have a few occasions where it will be useful to add some stochasticity to a deterministic model. Many different probability distributions are available in R. In this section, we introduce some functions associated with distributions and random sampling. Additional details, examples, and applications will be covered in course lectures."
  },
  {
    "objectID": "biomath_python.html#random-variables",
    "href": "biomath_python.html#random-variables",
    "title": "Python for Biomathematics",
    "section": "Random Variables",
    "text": "Random Variables\nWhile MATH 463 primarily focuses on deterministic models, stochastic models are also important in biomathematics, see for example (Allen 2011). We won’t cover stochastic models in the course but will have a few occasions where it will be useful to add some stochasticity to a deterministic model. Many different probability distributions are available in Python through the scipy.stats module. In this section, we introduce some functions associated with distributions and random sampling. Additional details, examples, and applications will be covered in course lectures."
  },
  {
    "objectID": "biomath_julia.html#random-variables",
    "href": "biomath_julia.html#random-variables",
    "title": "Julia for Biomathematics",
    "section": "Random Variables",
    "text": "Random Variables\nWhile MATH 463 primarily focuses on deterministic models, stochastic models are also important in biomathematics, see for example (Allen 2011). We won’t cover stochastic models in the course but will have a few occasions where it will be useful to add some stochasticity to a deterministic model. Many different probability distributions are available in Julia through the Distributions.jl package. In this section, we introduce some functions associated with distributions and random sampling. Additional details, examples, and applications will be covered in course lectures.\nFor more on probability and statistics using Julia, we recommend Statistics with Julia and Introduction to Probability for Data Science."
  },
  {
    "objectID": "biomath_r.html#symbolic-math",
    "href": "biomath_r.html#symbolic-math",
    "title": "R for Biomathematics",
    "section": "Symbolic Math",
    "text": "Symbolic Math\nCompared with other programming languages, R is not particularly well-suited for symbolic math. However, there are packages that can be used to perform symbolic math in R , for example:\n\nRyacas package for symbolic math in R.\n\nAnother option is to use the reticulate package to interface with Python and use the sympy package for symbolic math in Python. Use of the sympy package is demonstrated in the Python for Biomath tab of the course website."
  },
  {
    "objectID": "biomath_python.html#symbolic-math",
    "href": "biomath_python.html#symbolic-math",
    "title": "Python for Biomathematics",
    "section": "Symbolic Math",
    "text": "Symbolic Math"
  },
  {
    "objectID": "biomath_julia.html#symbolic-math",
    "href": "biomath_julia.html#symbolic-math",
    "title": "Julia for Biomathematics",
    "section": "Symbolic Math",
    "text": "Symbolic Math\n\nSymbolic Computation in Julia YouTube video, watch video on YouTube."
  },
  {
    "objectID": "biomath_julia.html#julia",
    "href": "biomath_julia.html#julia",
    "title": "Julia for Biomathematics",
    "section": "Julia",
    "text": "Julia\nThe Julia language is at the forefront of high-performance numerical and scientific computing (Bezanson et al. 2017). You can learn more about the history of Julia here.\n\nFunctions and Packages\nAs in R, most of the algorithms and methods we will want to use in solving problems in biomathematics are implemented as functions in Julia. Base Julia contains a number of functions including many that are useful for scientific computing. For example, base Julia contains a function sin that implements the mathematical function \\(\\sin(x)\\). It is called as follows:\n\nsin(pi/4.0)\n\n0.7071067811865475\n\n\nHowever, most of the functions we will use are not in base Julia but rather are contained in packages. A package is a collection of functions and other objects that can be loaded into Julia and used. Julia comes with a built-in package manager that allows you to install and manage packages. You can learn about the package manager through either the package manager documentation of the following video:\n\nManaging Packages in Julia YouTube video, watch video on YouTube.\n\n\n\n\nEnvinronment Setup\nOne thing that is a little different working in Julia (and also Python) compared to R is that it’s common practice to utilize a separate environment for each project. This is done to avoid conflicts between packages and package versions that might be used in different projects. Basically, a project consists of a folder that contains files named Project.toml and Manifest.toml. You can learn the details about Julia environments by reading the environment documentation or get a short tutorial by watching the following video:\n\nJulia environments YouTube video, watch video on YouTube.\n\n\nThe DrWatson.jl package provides a convenient way to manage projects and environments in Julia. You can learn more about DrWatson.jl by reading the documentation or watching the following video:\n\nThe following code uses DrWatson.jl to activate the environment for this project which is named biomath_2024:\n\n\nShow the code\n# import DrWatson.jl package\nusing DrWatson\n\n# activate the biomath_2024 environment\n@quickactivate \"biomath_2024\"\n\n\nNow that we have activated our environment, we can use the package manager Pkg.jl to see which packages are installed in the environment and their versions:\n\n\nShow the code\n# import Pkg.jl package\nimport Pkg\n# list packages installed in environment\nPkg.status()\n\n\nStatus `~/Documents/GitHub/biomath_2024/Project.toml`\n⌃ [13f3f980] CairoMakie v0.11.4\n  [a93c6f00] DataFrames v1.6.1\n  [0c46a032] DifferentialEquations v7.12.0\n  [31c24e10] Distributions v0.25.104\n⌅ [5b8099bc] DomainSets v0.6.7\n  [634d3b9d] DrWatson v2.13.0\n  [61744808] DynamicalSystems v3.2.3\n  [b964fa9f] LaTeXStrings v1.3.1\n  [94925ecb] MethodOfLines v0.10.4\n  [961ee093] ModelingToolkit v8.75.0\n  [8913a72c] NonlinearSolve v3.4.0\n  [429524aa] Optim v1.7.8\n⌃ [7f7a1694] Optimization v3.20.2\n⌅ [1dea7af3] OrdinaryDiffEq v6.66.0\n  [91a5bcdd] Plots v1.39.0\n  [f2b01f46] Roots v2.0.22\n⌅ [0c5d862f] Symbolics v5.14.0\nInfo Packages marked with ⌃ and ⌅ have new versions available. Those with ⌃ may be upgradable, but those with ⌅ are restricted by compatibility constraints from upgrading. To see why use `status --outdated`\n\n\nThe nice thing about working with Julia environments is that we can easily share the environment with others. The Project.toml and Manifest.toml files contain all the information needed to recreate the environment. If you download the project folder for biomath_2024 from the GitHub repository, then all you have to do is:\n\nStart Julia in the biomath_2024 folder which contains the Project.toml and Manifest.toml files.\nActivate the environment using DrWatson.jl as shown above.\nRun the instatiate command in the package manager to install all the packages listed in the Project.toml file1.\n\nSome of the packages most relevant for solving problems in biomathematics include:\n\nPlots.jl for plotting.\nDifferentialEquations.jl for numerical computing with differential equations.\nMethodOfLines.jl for numerical computing with partial differential equations."
  },
  {
    "objectID": "biomath_r.html#r",
    "href": "biomath_r.html#r",
    "title": "R for Biomathematics",
    "section": "R",
    "text": "R\nR is a programming language developed for statistical computing (R Core Team 2023). You can learn more about the history of R here. For programming in R, we highly recommend using the RStudio Integrated Development Environment (IDE) to interface with the language.\n\nFunctions and Packages\nMost of the algorithms and methods we will want to use in solving problems in biomathematics are implemented as functions in R. Base R contains a number of functions including many that are useful for scientific computing. For example, base R contains a function sin that implements the mathematical function \\(\\sin(x)\\). It is called as follows:\n\nsin(pi/4)\n\n[1] 0.7071068\n\n\nHowever, most of the functions we will use are not in base R but rather are contained in packages. A package is a collection of functions and other objects that can be loaded into R and used. There are thousands of packages available for R. You can find a list of packages on the Comprehensive R Archive Network (CRAN) or on Bioconductor. Some packages that we will use a lot in the course include:\n\ntidyverse - a collection of packages for data science (Wickham et al. 2019). The tidyverse package itself is a meta-package that loads a number of other packages including ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr, and forcats. Of these, ggplot2 is of great interest because it is used for creating high-quality plots and visualization (Wickham 2016).\ndeSolve - a package for numerical computing with differential equations (Karline Soetaert, Thomas Petzoldt, and R. Woodrow Setzer 2010).\nrootSolve - a package for root finding (Karline Soetaert 2009).\nReacTran - a package for numerical computing with partial differential equations equations (Soetaert and Meysman 2012).\nphaseR - a package for phase plane analysis (Grayling 2014).\n\nAfter you have installed these packages, you can load them into R using the library function1. For example, to load the packages listed above, you would use the following code:\n\n\nShow the code\n# load packages\nlibrary(tidyverse)\nlibrary(deSolve)\nlibrary(rootSolve)\nlibrary(ReacTran)\nlibrary(phaseR)\nlibrary(latex2exp)\nlibrary(patchwork)"
  },
  {
    "objectID": "biomath_python.html#python",
    "href": "biomath_python.html#python",
    "title": "Python for Biomathematics",
    "section": "Python",
    "text": "Python\nPython is an elegant an mature general-purpose programming language (Van Rossum and Drake 2009). You can learn more about the history of Python here.\n\nFunctions and Modules\nAs in R, most of the algorithms and methods we will want to use in solving problems in biomathematics are implemented as functions in Python. However, base Python contains very few functions useful for mathematics or scientific computing. Most of the functions we will need are contained in modules. A module is a collection of functions and other objects that can be imported into Python. There are many modules available for scientific computing in Python. We will focus on a few of the most commonly used ones such as\n\nNumPy: Numerical Python, offers comprehensive mathematical functions, random number generators, linear algebra routines, Fourier transforms, and more.\nSciPy: Scientific Python, provides algorithms for optimization, integration, interpolation, eigenvalue problems, algebraic equations, differential equations, statistics and many other classes of problems.\nMatplotlib: Plotting in Python, is a comprehensive library for creating static, animated, and interactive visualizations in Python.\nSymPy: Symbolic Python, is a library for symbolic mathematics.\npy-pde: py-pde is a python package providing methods and classes useful for solving partial differential equations (PDEs).\n\nOne thing that is a little different working in Python (and also Julia) compared to R is that it’s common practice to utilize virtual environments to avoid conflicts between functions and objects from different modules. Environments also help keep track of different versions of the Python interpreter. We will not go into details about how to use environments here, but we will provide some links to resources that explain how to use them.\n\n\nEnvinronment Setup\nThe most common tool in the scientific community for managing Python environments is Conda. Conda is a package manager that can be used to install Python and other software packages. It can also be used to create and manage virtual environments. Conda is available for Windows, Mac, and Linux. You can download and install Conda from here. To learn about using Conda, see the following video:\n\nMaster the basics of Conda environments in Python YouTube video, watch video on YouTube.\n\n\nThe nice thing about working with virtual environments is that we can easily share the environment with others. To do this, we can create a file called environment.yml that contains a list of all the packages we want to install in the environment. For example, the environment.yml file from the GitHub repository will create an environment called biomath_py that contains Python 3.9 and the NumPy, SciPy, Matplotlib, and SymPy modules among others.\nOnce we have set up and activated the environment, we can import modules and use functions from them. For example, to import the NumPy module and compute \\(\\sin\\left(\\frac{\\pi}{4}\\right)\\), we can use the following code:\n\nfrom numpy import sin, pi\n\nsin(pi/4)\n\n0.7071067811865475"
  },
  {
    "objectID": "biomath_julia.html#footnotes",
    "href": "biomath_julia.html#footnotes",
    "title": "Julia for Biomathematics",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNote that you have to activate the environment any time you want to work in the project. However, you only need to instatiate the project the first time you use it in order to install all the packages. After that, you can just activate the environment and start working.↩︎\nAnother package that provides an interesting approach to solving linear systems in Julia is LinearSolve.jl.↩︎\nNote that we allow for the function \\(f\\) to be vector-valued, in which case we are looking for solutions to a system of nonlinear equations.↩︎"
  },
  {
    "objectID": "biomath_r.html#footnotes",
    "href": "biomath_r.html#footnotes",
    "title": "R for Biomathematics",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNote that you must install a package before you can load it. You can install a package using the install.packages function or the Packages tab in the RStudio IDE. Packages only need to be installed once but must be loaded in each new R session.↩︎\nNote that we allow for the function \\(f\\) to be vector-valued, in which case we are looking for solutions to a system of nonlinear equations.↩︎"
  },
  {
    "objectID": "biomath_r.html#matrices-and-linear-systems",
    "href": "biomath_r.html#matrices-and-linear-systems",
    "title": "R for Biomathematics",
    "section": "Matrices and Linear Systems",
    "text": "Matrices and Linear Systems\nHere’s a vector:\n\nmy_vect &lt;- c(1,-1,1)\n\nHere’s a matrix:\n\nmy_matrix &lt;- matrix(c(1,0,-1,3,1,2,-1,1,2), nrow = 3, ncol = 3, byrow = TRUE)\nmy_matrix\n\n     [,1] [,2] [,3]\n[1,]    1    0   -1\n[2,]    3    1    2\n[3,]   -1    1    2\n\n\nHere’s the matrix-vector product:\n\nb_vect &lt;- my_matrix %*% my_vect\nb_vect\n\n     [,1]\n[1,]    0\n[2,]    4\n[3,]    0\n\n\nHere’s the determinant of the matrix:\n\ndet(my_matrix)\n\n[1] -4\n\n\nHere are the eigenvalues and eigenvectors of the matrix:\n\neigen(my_matrix)\n\neigen() decomposition\n$values\n[1]  2.7320508  2.0000000 -0.7320508\n\n$vectors\n           [,1]       [,2]       [,3]\n[1,] -0.4955722 -0.5773503  0.2361737\n[2,]  0.1327882 -0.5773503 -0.8814124\n[3,]  0.8583563  0.5773503  0.4090649\n\n\nHere’s the solution to the linear system:\n\nsolve(my_matrix, b_vect)\n\n     [,1]\n[1,]    1\n[2,]   -1\n[3,]    1"
  },
  {
    "objectID": "biomath_julia.html#matrices-and-linear-systems",
    "href": "biomath_julia.html#matrices-and-linear-systems",
    "title": "Julia for Biomathematics",
    "section": "Matrices and Linear Systems",
    "text": "Matrices and Linear Systems\nSome methods for linear algebra in Julia are provided by the LinearAlgebra.jl package2. The LinearAlgebra.jl package is part of the Julia standard library so it doesn’t need to be installed but must be imported. We can import the package as follows:\n\nusing LinearAlgebra\n\nHere’s a vector:\n\nmy_vect = [1.0,-1.0,1.0]\n\n3-element Vector{Float64}:\n  1.0\n -1.0\n  1.0\n\n\nHere’s a matrix:\n\nmy_matrix = [1.0 0.0 -1.0;\n             3.0 1.0 2.0; \n             -1.0 1.0 2.0]\n\n3×3 Matrix{Float64}:\n  1.0  0.0  -1.0\n  3.0  1.0   2.0\n -1.0  1.0   2.0\n\n\nHere’s the matrix-vector product:\n\nb_vect = my_matrix * my_vect\nb_vect\n\n3-element Vector{Float64}:\n 0.0\n 4.0\n 0.0\n\n\nHere’s the determinant of the matrix:\n\ndet(my_matrix)\n\n-3.9999999999999996\n\n\nHere are the eigenvalues and eigenvectors of the matrix:\n\neigen(my_matrix)\n\nEigen{Float64, Float64, Matrix{Float64}, Vector{Float64}}\nvalues:\n3-element Vector{Float64}:\n -0.7320508075688776\n  2.0\n  2.732050807568877\nvectors:\n3×3 Matrix{Float64}:\n  0.236174  -0.57735  -0.495572\n -0.881412  -0.57735   0.132788\n  0.409065   0.57735   0.858356\n\n\nHere’s the solution to the linear system:\n\nmy_matrix \\ b_vect\n\n3-element Vector{Float64}:\n  1.0\n -1.0000000000000004\n  1.0000000000000002\n\n\nTo learn more, check out\n\nBasic Linear Algebra in Julia YouTube video, watch video on YouTube."
  },
  {
    "objectID": "biomath_python.html#matrices-and-linear-systems",
    "href": "biomath_python.html#matrices-and-linear-systems",
    "title": "Python for Biomathematics",
    "section": "Matrices and Linear Systems",
    "text": "Matrices and Linear Systems\n\nimport numpy as np\nfrom scipy import linalg\n\nHere’s a vector:\n\nmy_vect = np.array([1.0,-1.0,1.0])\nprint(my_vect)\n\n[ 1. -1.  1.]\n\n\nHere’s a matrix:\n\nmy_matrix = np.array([[1.0, 0.0, -1.0],[3.0, 1.0, 2.0],[-1.0, 1.0, 2.0]])\nprint(my_matrix)\n\n[[ 1.  0. -1.]\n [ 3.  1.  2.]\n [-1.  1.  2.]]\n\n\nHere’s the matrix-vector product:\n\nb_vect = my_matrix @ my_vect\nprint(b_vect)\n\n[0. 4. 0.]\n\n\nHere’s the determinant of the matrix:\n\nmatrix_det = linalg.det(my_matrix)\nprint(matrix_det)\n\n-4.0\n\n\nHere are the eigenvalues and eigenvectors of the matrix:\n\neig_vals, eig_vects = linalg.eig(my_matrix)\nprint(eig_vals)\nprint(eig_vects)\n\n[-0.73205081+0.j  2.        +0.j  2.73205081+0.j]\n[[ 0.23617375 -0.57735027 -0.49557222]\n [-0.88141242 -0.57735027  0.13278818]\n [ 0.40906493  0.57735027  0.85835626]]\n\n\nHere’s the solution to the linear system:\n\nx_vect = linalg.solve(my_matrix, b_vect)\nprint(x_vect)\n\n[ 1. -1.  1.]\n\n\nTo learn more, check out\n\nLinear Algebra in Python with SciPy and NumPy YouTube video, watch video on YouTube."
  },
  {
    "objectID": "biomath_python.html#footnotes",
    "href": "biomath_python.html#footnotes",
    "title": "Python for Biomathematics",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNote that we allow for the function \\(f\\) to be vector-valued, in which case we are looking for solutions to a system of nonlinear equations.↩︎"
  },
  {
    "objectID": "index.html#course-timeline",
    "href": "index.html#course-timeline",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "",
    "text": "Week 1 (01/22-01/26): Introduction to Biomathematics\nWeek 2 (01/29-02/02): Dimensional Analysis and Scaling\nWeek 3 (02/05-02/09): One-Dimensional Dynamics and Introduction to Population Dynamics\nWeek 4 (02/12-02/16): Bifurcation Theory and Compartment Models\nWeek 5 (02/19-02/23): SIR Type Models and The Chemostat Bio-reactor\nWeek 6 (02/26-03/01): Functional Forms\nWeek 7 (03/04-03/08): Exam 1\nWeek 8 (03/11-03/15): Spring Break\nWeek 9 (03/18-03/22): Two-Dimensional Dynamics and Phase Plane Analysis\nWeek 10 (03/25-03/29): Mass Action and Reaction Kinetics/ Easter Break; Model Report Draft 1 Due\nWeek 11 (04/01-04/05): Easter Break/ Mass Action and Reaction Kinetics\nWeek 12 (04/08-04/12): Mathematical Physiology\nWeek 13 (04/15-04/19): Perturbation Methods\nWeek 14 (04/22-04/26): Additional Topics\nWeek 15 (04/29-05/03): Exam 2; Model Report Final Draft Due\nWeek 16 (05/06-05/10): Dead Week\nWeek 17 (05/13-05/17): Final Exams; Final Project Due\n\n\n\n\n\n\n\n\nTable 3: Important Dates\n\n\nEvent\nDate\n\n\n\n\nClasses begin\nWednesday, January 24\n\n\nLast day to add classes\nTuesday, January 30\n\n\nLast day for 100% tution refund\nFriday, February 2\n\n\nLast day to drop with no grade\nFriday, February 23\n\n\nExam 1\nWednesday, March 6\n\n\nLast day of class before spring break\nFriday, March 8\n\n\nClasses resume after spring break\nMonday, March 18\n\n\nSemester Midpoint\nWednesday, March 20\n\n\nLast day of class before Easter break\nWednesday, March 27\n\n\nClasses resume after Easter\nTuesday, April 2\n\n\nLast day to withdraw with W grade\nFriday, April 12\n\n\nExam 2\nWednesday, May 1\n\n\nLast day of class\nFriday, May 10\n\n\nFinal exams begin\nMonday, May 13\n\n\nFinal exams end\nFriday, May 17"
  },
  {
    "objectID": "intro_lecture/index.html#goals",
    "href": "intro_lecture/index.html#goals",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Goals",
    "text": "Goals\n\nIntroduce the field of biomathematics\nProvide context for the course content\nGain overview of the course"
  },
  {
    "objectID": "intro_lecture/index.html#darwins-quote",
    "href": "intro_lecture/index.html#darwins-quote",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Darwin’s Quote",
    "text": "Darwin’s Quote\n\nEvery new body of discovery is mathematical in form, because there is no other guidance we can have. Mathematics seems to endow one with something like a new sense. - Charles Darwin"
  },
  {
    "objectID": "intro_lecture/index.html#oster-and-wilson",
    "href": "intro_lecture/index.html#oster-and-wilson",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Oster and Wilson",
    "text": "Oster and Wilson\n\nLike most biologists concerned with theory, we appreciate that models do not themselves provide definitive answers to biological questions. Mathematics is, after all, little more than scaffolding upon which all manner of facts about the real world can be arranged, hopefully into a more esthetic and useful structure. Mathematical theory is the science of all conceivable worlds. The most important role models play in science is to help us to perceive a problem more clearly and to generate thoughts that might not otherwise have occurred. - Oster and Wilson (1978)"
  },
  {
    "objectID": "intro_lecture/index.html#population-dynamics",
    "href": "intro_lecture/index.html#population-dynamics",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Population Dynamics",
    "text": "Population Dynamics"
  },
  {
    "objectID": "intro_lecture/index.html#fibonaccis-rabbits",
    "href": "intro_lecture/index.html#fibonaccis-rabbits",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Fibonacci’s Rabbits",
    "text": "Fibonacci’s Rabbits\n\nSomeone had one pair of rabbits together in a certain enclosed place. One wishes to know how many are created from the pair in one year when it is the nature of them in a single month to bear another pair and in the second month those born to bear also. - Fibonacci Liber abaci (1202)\n\nNote that if there is a pair of newborn rabbits at the beginning of the first month, this pair will not yet be fertile after one month and there will still be just one pair of rabbits at the beginning of the second month."
  },
  {
    "objectID": "intro_lecture/index.html#spread-of-disease",
    "href": "intro_lecture/index.html#spread-of-disease",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Spread of Disease",
    "text": "Spread of Disease\n\n\n\n\\[\n\\begin{align}\n\\frac{dS}{dt} &= -\\beta SI, \\\\\n\\frac{dI}{dt} &= \\beta SI - \\gamma I, \\\\\n\\frac{dR}{dt} &= \\gamma I.\n\\end{align}\n\\]\n\n\\[\nR_{0} = \\frac{\\beta}{\\gamma}\n\\]"
  },
  {
    "objectID": "intro_lecture/index.html#cancer-modeling",
    "href": "intro_lecture/index.html#cancer-modeling",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Cancer Modeling",
    "text": "Cancer Modeling"
  },
  {
    "objectID": "intro_lecture/index.html#physiology",
    "href": "intro_lecture/index.html#physiology",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Physiology",
    "text": "Physiology"
  },
  {
    "objectID": "intro_lecture/index.html#neuroscience",
    "href": "intro_lecture/index.html#neuroscience",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Neuroscience",
    "text": "Neuroscience"
  },
  {
    "objectID": "intro_lecture/index.html#cardiology",
    "href": "intro_lecture/index.html#cardiology",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Cardiology",
    "text": "Cardiology"
  },
  {
    "objectID": "intro_lecture/index.html#arterial-stent-design",
    "href": "intro_lecture/index.html#arterial-stent-design",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Arterial Stent Design",
    "text": "Arterial Stent Design\n\nSource: https://www.math.uh.edu/~canic/"
  },
  {
    "objectID": "intro_lecture/index.html#another-approach",
    "href": "intro_lecture/index.html#another-approach",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Another Approach",
    "text": "Another Approach"
  },
  {
    "objectID": "intro_lecture/index.html#dynamical-systems",
    "href": "intro_lecture/index.html#dynamical-systems",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Dynamical Systems",
    "text": "Dynamical Systems"
  },
  {
    "objectID": "intro_lecture/index.html#example-in-population-dynamics",
    "href": "intro_lecture/index.html#example-in-population-dynamics",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Example in Population Dynamics",
    "text": "Example in Population Dynamics\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nlogistic_growth &lt;- function(x) {\n  return(x * (1 - x))\n}\n\nphase_line_data &lt;- data.frame(x = c(-0.25,1.5))\n\nggplot(phase_line_data, aes(x = x)) +\n  geom_function(fun=logistic_growth,color = \"steelblue\", size = 1) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_vline(xintercept = 1, linetype = \"dashed\", color = \"black\") +\n  geom_segment(aes(x = 0.9, y = 0, xend = 1, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"purple\") +\n  geom_segment(aes(x = 0.7, y = 0, xend = 0.8, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"purple\") +\n  geom_segment(aes(x = 0.5, y = 0, xend = 0.6, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"purple\") +\n  geom_segment(aes(x = 0.3, y = 0, xend = 0.4, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"purple\") +\n  geom_segment(aes(x = 0.1, y = 0, xend = 0.2, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"purple\") +\n  geom_segment(aes(x = 1.2, y = 0, xend = 1.1, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"orange\") +\n  geom_segment(aes(x = 1.4, y = 0, xend = 1.3, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"orange\") +\n  geom_segment(aes(x = -0.1, y = 0, xend = -0.2, yend = 0), \n               arrow = arrow(length = unit(0.3, \"cm\")), color = \"orange\") +\n  geom_point(aes(x = 0, y = 0), color = \"darkred\", size = 4, shape = 1) +\n  geom_point(aes(x = 1, y = 0), color = \"darkred\", size = 4) +\n  labs(title = \"Logistic Growth Phase Line\",\n       x = \"Population\",\n       y = \"Population Rate of Change\",\n       caption = \"Phase line for logistic growth\")"
  },
  {
    "objectID": "intro_lecture/index.html#epidemiology",
    "href": "intro_lecture/index.html#epidemiology",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Epidemiology",
    "text": "Epidemiology"
  },
  {
    "objectID": "intro_lecture/index.html#populations-and-epidemiology",
    "href": "intro_lecture/index.html#populations-and-epidemiology",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Populations and Epidemiology",
    "text": "Populations and Epidemiology"
  },
  {
    "objectID": "intro_lecture/index.html#getting-started-with-r",
    "href": "intro_lecture/index.html#getting-started-with-r",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Getting Started with R",
    "text": "Getting Started with R"
  },
  {
    "objectID": "intro_lecture/index.html#course-themes",
    "href": "intro_lecture/index.html#course-themes",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Course Themes",
    "text": "Course Themes\n\nGeneral principles of mathematical modeling\n\nDimensional analysis and scaling\nCompartment models\n\nGetting information from models\n\nEquilibrium solutions, steady states and stability, and bifurcations\nSimulation\n\nDerivation of basic models\nPresentation of results"
  },
  {
    "objectID": "intro_lecture/index.html#fibonacci-sequence",
    "href": "intro_lecture/index.html#fibonacci-sequence",
    "title": "MATH 463 Topics in Biomathematics",
    "section": "Fibonacci Sequence",
    "text": "Fibonacci Sequence\nAfter some thought, one can see that the number of pairs of rabbits at the beginning of each month is given by the Fibonacci recurrence equation:\n\\[\nx_{n+2} = x_{n+1} + x_n\n\\]\nStarting with \\(x_0 = 1\\) and \\(x_1 = 1\\). You will show in the first homework that a solution to this recurrence is given by\n\\[\nx_n = \\frac{1}{\\sqrt{5}} \\left( \\frac{1 + \\sqrt{5}}{2} \\right)^{n+1} - \\frac{1}{\\sqrt{5}}\\left( \\frac{1 - \\sqrt{5}}{2} \\right)^{n+1}\n\\]"
  }
]